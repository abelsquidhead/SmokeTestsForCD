<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.configuration.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemConfigurationDelegates">
            <summary>Contains custom delegates used for the stubs and shims of System.Configuration</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimAppSettingsSection">
            <summary>Shim type of System.Configuration.AppSettingsSection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimAppSettingsSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimAppSettingsSection.#ctor(System.Configuration.AppSettingsSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.DeserializeElementXmlReaderBoolean">
            <summary>Sets the shim of AppSettingsSection.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.FileGet">
            <summary>Sets the shim of AppSettingsSection.get_File()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.FileSetString">
            <summary>Sets the shim of AppSettingsSection.set_File(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.GetRuntimeObject">
            <summary>Sets the shim of AppSettingsSection.GetRuntimeObject()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.IsModified">
            <summary>Sets the shim of AppSettingsSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.PropertiesGet">
            <summary>Sets the shim of AppSettingsSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.ResetConfigurationElement">
            <summary>Sets the shim of AppSettingsSection.Reset(ConfigurationElement parentSection)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of AppSettingsSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.AllInstances.SettingsGet">
            <summary>Sets the shim of AppSettingsSection.get_Settings()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimAppSettingsSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimAppSettingsSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.Constructor">
            <summary>Sets the shim of AppSettingsSection.AppSettingsSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the shim of AppSettingsSection.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.FileGet">
            <summary>Sets the shim of AppSettingsSection.get_File()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.FileSetString">
            <summary>Sets the shim of AppSettingsSection.set_File(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.GetRuntimeObject">
            <summary>Sets the shim of AppSettingsSection.GetRuntimeObject()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.IsModified">
            <summary>Sets the shim of AppSettingsSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.PropertiesGet">
            <summary>Sets the shim of AppSettingsSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.ResetConfigurationElement">
            <summary>Sets the shim of AppSettingsSection.Reset(ConfigurationElement parentSection)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of AppSettingsSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimAppSettingsSection.SettingsGet">
            <summary>Sets the shim of AppSettingsSection.get_Settings()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCallbackValidator">
            <summary>Shim type of System.Configuration.CallbackValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidator.#ctor(System.Configuration.CallbackValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCallbackValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of CallbackValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of CallbackValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidator.CanValidateType">
            <summary>Sets the shim of CallbackValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidator.ConstructorTypeValidatorCallback">
            <summary>Sets the shim of CallbackValidator.CallbackValidator(Type type, ValidatorCallback callback)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidator.ValidateObject">
            <summary>Sets the shim of CallbackValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCallbackValidatorAttribute">
            <summary>Shim type of System.Configuration.CallbackValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidatorAttribute.#ctor(System.Configuration.CallbackValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCallbackValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.AllInstances.CallbackMethodNameGet">
            <summary>Sets the shim of CallbackValidatorAttribute.get_CallbackMethodName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.AllInstances.CallbackMethodNameSetString">
            <summary>Sets the shim of CallbackValidatorAttribute.set_CallbackMethodName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.AllInstances.TypeGet">
            <summary>Sets the shim of CallbackValidatorAttribute.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.AllInstances.TypeSetType">
            <summary>Sets the shim of CallbackValidatorAttribute.set_Type(Type value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of CallbackValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCallbackValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.CallbackMethodNameGet">
            <summary>Sets the shim of CallbackValidatorAttribute.get_CallbackMethodName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.CallbackMethodNameSetString">
            <summary>Sets the shim of CallbackValidatorAttribute.set_CallbackMethodName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.Constructor">
            <summary>Sets the shim of CallbackValidatorAttribute.CallbackValidatorAttribute()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.TypeGet">
            <summary>Sets the shim of CallbackValidatorAttribute.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.TypeSetType">
            <summary>Sets the shim of CallbackValidatorAttribute.set_Type(Type value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCallbackValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of CallbackValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCommaDelimitedStringCollection">
            <summary>Shim type of System.Configuration.CommaDelimitedStringCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.#ctor(System.Configuration.CommaDelimitedStringCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AddRangeStringArray">
            <summary>Sets the shim of CommaDelimitedStringCollection.AddRange(String[] range)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AddString">
            <summary>Sets the shim of CommaDelimitedStringCollection.Add(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.AddRangeStringArray">
            <summary>Sets the shim of CommaDelimitedStringCollection.AddRange(String[] range)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.AddString">
            <summary>Sets the shim of CommaDelimitedStringCollection.Add(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.Clear">
            <summary>Sets the shim of CommaDelimitedStringCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.Clone">
            <summary>Sets the shim of CommaDelimitedStringCollection.Clone()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.InsertInt32String">
            <summary>Sets the shim of CommaDelimitedStringCollection.Insert(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.IsModifiedGet">
            <summary>Sets the shim of CommaDelimitedStringCollection.get_IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of CommaDelimitedStringCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of CommaDelimitedStringCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.ItemSetInt32String">
            <summary>Sets the shim of CommaDelimitedStringCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.RemoveString">
            <summary>Sets the shim of CommaDelimitedStringCollection.Remove(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.SetReadOnly">
            <summary>Sets the shim of CommaDelimitedStringCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.AllInstances.ToString01">
            <summary>Sets the shim of CommaDelimitedStringCollection.ToString()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.Clear">
            <summary>Sets the shim of CommaDelimitedStringCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.Clone">
            <summary>Sets the shim of CommaDelimitedStringCollection.Clone()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.Constructor">
            <summary>Sets the shim of CommaDelimitedStringCollection.CommaDelimitedStringCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.InsertInt32String">
            <summary>Sets the shim of CommaDelimitedStringCollection.Insert(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.IsModifiedGet">
            <summary>Sets the shim of CommaDelimitedStringCollection.get_IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.IsReadOnlyGet">
            <summary>Sets the shim of CommaDelimitedStringCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.ItemGetInt32">
            <summary>Sets the shim of CommaDelimitedStringCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.ItemSetInt32String">
            <summary>Sets the shim of CommaDelimitedStringCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.RemoveString">
            <summary>Sets the shim of CommaDelimitedStringCollection.Remove(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.SetReadOnly">
            <summary>Sets the shim of CommaDelimitedStringCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollection.ToString">
            <summary>Sets the shim of CommaDelimitedStringCollection.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter">
            <summary>Shim type of System.Configuration.CommaDelimitedStringCollectionConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.#ctor(System.Configuration.CommaDelimitedStringCollectionConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of CommaDelimitedStringCollectionConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of CommaDelimitedStringCollectionConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.Constructor">
            <summary>Sets the shim of CommaDelimitedStringCollectionConverter.CommaDelimitedStringCollectionConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of CommaDelimitedStringCollectionConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimCommaDelimitedStringCollectionConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of CommaDelimitedStringCollectionConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfiguration">
            <summary>Shim type of System.Configuration.Configuration</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfiguration.#ctor(System.Configuration.Configuration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.AppSettingsGet">
            <summary>Sets the shim of Configuration.get_AppSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.AssemblyStringTransformerGet">
            <summary>Sets the shim of Configuration.get_AssemblyStringTransformer()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.AssemblyStringTransformerSetFuncOfStringString">
            <summary>Sets the shim of Configuration.set_AssemblyStringTransformer(Func`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.ConnectionStringsGet">
            <summary>Sets the shim of Configuration.get_ConnectionStrings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.Constructor">
            <summary>Sets the shim of Configuration.Configuration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.EvaluationContextGet">
            <summary>Sets the shim of Configuration.get_EvaluationContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.FilePathGet">
            <summary>Sets the shim of Configuration.get_FilePath()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.GetSectionGroupString">
            <summary>Sets the shim of Configuration.GetSectionGroup(String sectionGroupName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.GetSectionString">
            <summary>Sets the shim of Configuration.GetSection(String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.HasFileGet">
            <summary>Sets the shim of Configuration.get_HasFile()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.LocationsGet">
            <summary>Sets the shim of Configuration.get_Locations()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.NamespaceDeclaredGet">
            <summary>Sets the shim of Configuration.get_NamespaceDeclared()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.NamespaceDeclaredSetBoolean">
            <summary>Sets the shim of Configuration.set_NamespaceDeclared(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.RootSectionGroupGet">
            <summary>Sets the shim of Configuration.get_RootSectionGroup()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.Save">
            <summary>Sets the shim of Configuration.Save()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.SaveAsString">
            <summary>Sets the shim of Configuration.SaveAs(String filename)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.SaveAsStringConfigurationSaveMode">
            <summary>Sets the shim of Configuration.SaveAs(String filename, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.SaveAsStringConfigurationSaveModeBoolean">
            <summary>Sets the shim of Configuration.SaveAs(String filename, ConfigurationSaveMode saveMode, Boolean forceSaveAll)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.SaveConfigurationSaveMode">
            <summary>Sets the shim of Configuration.Save(ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.SaveConfigurationSaveModeBoolean">
            <summary>Sets the shim of Configuration.Save(ConfigurationSaveMode saveMode, Boolean forceSaveAll)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.SectionGroupsGet">
            <summary>Sets the shim of Configuration.get_SectionGroups()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.SectionsGet">
            <summary>Sets the shim of Configuration.get_Sections()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.TargetFrameworkGet">
            <summary>Sets the shim of Configuration.get_TargetFramework()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.TargetFrameworkSetFrameworkName">
            <summary>Sets the shim of Configuration.set_TargetFramework(FrameworkName value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.TypeStringTransformerGet">
            <summary>Sets the shim of Configuration.get_TypeStringTransformer()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AllInstances.TypeStringTransformerSetFuncOfStringString">
            <summary>Sets the shim of Configuration.set_TypeStringTransformer(Func`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AppSettingsGet">
            <summary>Sets the shim of Configuration.get_AppSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AssemblyStringTransformerGet">
            <summary>Sets the shim of Configuration.get_AssemblyStringTransformer()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.AssemblyStringTransformerSetFuncOfStringString">
            <summary>Sets the shim of Configuration.set_AssemblyStringTransformer(Func`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.ConnectionStringsGet">
            <summary>Sets the shim of Configuration.get_ConnectionStrings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.Constructor">
            <summary>Sets the shim of Configuration.Configuration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.EvaluationContextGet">
            <summary>Sets the shim of Configuration.get_EvaluationContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.FilePathGet">
            <summary>Sets the shim of Configuration.get_FilePath()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.GetSectionGroupString">
            <summary>Sets the shim of Configuration.GetSectionGroup(String sectionGroupName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.GetSectionString">
            <summary>Sets the shim of Configuration.GetSection(String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.HasFileGet">
            <summary>Sets the shim of Configuration.get_HasFile()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.LocationsGet">
            <summary>Sets the shim of Configuration.get_Locations()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.NamespaceDeclaredGet">
            <summary>Sets the shim of Configuration.get_NamespaceDeclared()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.NamespaceDeclaredSetBoolean">
            <summary>Sets the shim of Configuration.set_NamespaceDeclared(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.RootSectionGroupGet">
            <summary>Sets the shim of Configuration.get_RootSectionGroup()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.Save">
            <summary>Sets the shim of Configuration.Save()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.SaveAsString">
            <summary>Sets the shim of Configuration.SaveAs(String filename)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.SaveAsStringConfigurationSaveMode">
            <summary>Sets the shim of Configuration.SaveAs(String filename, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.SaveAsStringConfigurationSaveModeBoolean">
            <summary>Sets the shim of Configuration.SaveAs(String filename, ConfigurationSaveMode saveMode, Boolean forceSaveAll)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.SaveConfigurationSaveMode">
            <summary>Sets the shim of Configuration.Save(ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.SaveConfigurationSaveModeBoolean">
            <summary>Sets the shim of Configuration.Save(ConfigurationSaveMode saveMode, Boolean forceSaveAll)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.SectionGroupsGet">
            <summary>Sets the shim of Configuration.get_SectionGroups()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.SectionsGet">
            <summary>Sets the shim of Configuration.get_Sections()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.TargetFrameworkGet">
            <summary>Sets the shim of Configuration.get_TargetFramework()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.TargetFrameworkSetFrameworkName">
            <summary>Sets the shim of Configuration.set_TargetFramework(FrameworkName value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.TypeStringTransformerGet">
            <summary>Sets the shim of Configuration.get_TypeStringTransformer()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfiguration.TypeStringTransformerSetFuncOfStringString">
            <summary>Sets the shim of Configuration.set_TypeStringTransformer(Func`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationCollectionAttribute">
            <summary>Shim type of System.Configuration.ConfigurationCollectionAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.#ctor(System.Configuration.ConfigurationCollectionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AddItemNameGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_AddItemName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AddItemNameSetString">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_AddItemName(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.AddItemNameGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_AddItemName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.AddItemNameSetString">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_AddItemName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.ClearItemsNameGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_ClearItemsName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.ClearItemsNameSetString">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_ClearItemsName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.CollectionTypeGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_CollectionType()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.CollectionTypeSetConfigurationElementCollectionType">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_CollectionType(ConfigurationElementCollectionType value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.ItemTypeGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_ItemType()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.RemoveItemNameGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_RemoveItemName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.AllInstances.RemoveItemNameSetString">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_RemoveItemName(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.ClearItemsNameGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_ClearItemsName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.ClearItemsNameSetString">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_ClearItemsName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.CollectionTypeGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_CollectionType()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.CollectionTypeSetConfigurationElementCollectionType">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_CollectionType(ConfigurationElementCollectionType value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.ConstructorType">
            <summary>Sets the shim of ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type itemType)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.ItemTypeGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_ItemType()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.RemoveItemNameGet">
            <summary>Sets the shim of ConfigurationCollectionAttribute.get_RemoveItemName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationCollectionAttribute.RemoveItemNameSetString">
            <summary>Sets the shim of ConfigurationCollectionAttribute.set_RemoveItemName(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationConverterBase">
            <summary>Shim type of System.Configuration.ConfigurationConverterBase</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationConverterBase.#ctor(System.Configuration.ConfigurationConverterBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationConverterBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationConverterBase.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>Sets the shim of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationConverterBase.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>Sets the shim of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationConverterBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationConverterBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationConverterBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationConverterBase.CanConvertFromITypeDescriptorContextType">
            <summary>Sets the shim of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationConverterBase.CanConvertToITypeDescriptorContextType">
            <summary>Sets the shim of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationConverterBase.Constructor">
            <summary>Sets the shim of ConfigurationConverterBase.ConfigurationConverterBase()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationElement">
            <summary>Shim type of System.Configuration.ConfigurationElement</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElement.#ctor(System.Configuration.ConfigurationElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.CurrentConfigurationGet">
            <summary>Sets the shim of ConfigurationElement.get_CurrentConfiguration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.DeserializeElementXmlReaderBoolean">
            <summary>Sets the shim of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ElementInformationGet">
            <summary>Sets the shim of ConfigurationElement.get_ElementInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ElementPropertyGet">
            <summary>Sets the shim of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.EqualsObject">
            <summary>Sets the shim of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.EvaluationContextGet">
            <summary>Sets the shim of ConfigurationElement.get_EvaluationContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.GetTransformedAssemblyStringString">
            <summary>Sets the shim of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.GetTransformedTypeStringString">
            <summary>Sets the shim of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.HasContextGet">
            <summary>Sets the shim of ConfigurationElement.get_HasContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.Init">
            <summary>Sets the shim of ConfigurationElement.Init()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.InitializeDefault">
            <summary>Sets the shim of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.IsModified">
            <summary>Sets the shim of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.IsReadOnly">
            <summary>Sets the shim of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ItemGetConfigurationProperty">
            <summary>Sets the shim of ConfigurationElement.get_Item(ConfigurationProperty prop)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ItemGetString">
            <summary>Sets the shim of ConfigurationElement.get_Item(String propertyName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ItemSetConfigurationPropertyObject">
            <summary>Sets the shim of ConfigurationElement.set_Item(ConfigurationProperty prop, Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of ConfigurationElement.set_Item(String propertyName, Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ListErrorsIList">
            <summary>Sets the shim of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.LockAllAttributesExceptGet">
            <summary>Sets the shim of ConfigurationElement.get_LockAllAttributesExcept()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.LockAllElementsExceptGet">
            <summary>Sets the shim of ConfigurationElement.get_LockAllElementsExcept()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.LockAttributesGet">
            <summary>Sets the shim of ConfigurationElement.get_LockAttributes()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.LockElementsGet">
            <summary>Sets the shim of ConfigurationElement.get_LockElements()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.LockItemGet">
            <summary>Sets the shim of ConfigurationElement.get_LockItem()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.LockItemSetBoolean">
            <summary>Sets the shim of ConfigurationElement.set_LockItem(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.OnRequiredPropertyNotFoundString">
            <summary>Sets the shim of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.PostDeserialize">
            <summary>Sets the shim of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.PreSerializeXmlWriter">
            <summary>Sets the shim of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ResetConfigurationElement">
            <summary>Sets the shim of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.ResetModified">
            <summary>Sets the shim of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.SerializeElementXmlWriterBoolean">
            <summary>Sets the shim of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.SerializeToXmlElementXmlWriterString">
            <summary>Sets the shim of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.SetPropertyValueConfigurationPropertyObjectBoolean">
            <summary>Sets the shim of ConfigurationElement.SetPropertyValue(ConfigurationProperty prop, Object value, Boolean ignoreLocks)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.SetReadOnly">
            <summary>Sets the shim of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.AllInstances.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the shim of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.Constructor">
            <summary>Sets the shim of ConfigurationElement.ConfigurationElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.CurrentConfigurationGet">
            <summary>Sets the shim of ConfigurationElement.get_CurrentConfiguration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the shim of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ElementInformationGet">
            <summary>Sets the shim of ConfigurationElement.get_ElementInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ElementPropertyGet">
            <summary>Sets the shim of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.EqualsObject">
            <summary>Sets the shim of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.EvaluationContextGet">
            <summary>Sets the shim of ConfigurationElement.get_EvaluationContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.GetHashCode">
            <summary>Sets the shim of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.GetTransformedAssemblyStringString">
            <summary>Sets the shim of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.GetTransformedTypeStringString">
            <summary>Sets the shim of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.HasContextGet">
            <summary>Sets the shim of ConfigurationElement.get_HasContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.Init">
            <summary>Sets the shim of ConfigurationElement.Init()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.InitializeDefault">
            <summary>Sets the shim of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.IsModified">
            <summary>Sets the shim of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.IsReadOnly">
            <summary>Sets the shim of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ItemGetConfigurationProperty">
            <summary>Sets the shim of ConfigurationElement.get_Item(ConfigurationProperty prop)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ItemGetString">
            <summary>Sets the shim of ConfigurationElement.get_Item(String propertyName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ItemSetConfigurationPropertyObject">
            <summary>Sets the shim of ConfigurationElement.set_Item(ConfigurationProperty prop, Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ItemSetStringObject">
            <summary>Sets the shim of ConfigurationElement.set_Item(String propertyName, Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ListErrorsIList">
            <summary>Sets the shim of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.LockAllAttributesExceptGet">
            <summary>Sets the shim of ConfigurationElement.get_LockAllAttributesExcept()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.LockAllElementsExceptGet">
            <summary>Sets the shim of ConfigurationElement.get_LockAllElementsExcept()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.LockAttributesGet">
            <summary>Sets the shim of ConfigurationElement.get_LockAttributes()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.LockElementsGet">
            <summary>Sets the shim of ConfigurationElement.get_LockElements()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.LockItemGet">
            <summary>Sets the shim of ConfigurationElement.get_LockItem()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.LockItemSetBoolean">
            <summary>Sets the shim of ConfigurationElement.set_LockItem(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the shim of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.PostDeserialize">
            <summary>Sets the shim of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.PreSerializeXmlWriter">
            <summary>Sets the shim of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.PropertiesGet">
            <summary>Sets the shim of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ResetConfigurationElement">
            <summary>Sets the shim of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.ResetModified">
            <summary>Sets the shim of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the shim of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the shim of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.SetPropertyValueConfigurationPropertyObjectBoolean">
            <summary>Sets the shim of ConfigurationElement.SetPropertyValue(ConfigurationProperty prop, Object value, Boolean ignoreLocks)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.SetReadOnly">
            <summary>Sets the shim of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.StaticConstructor">
            <summary>Sets the shim of ConfigurationElement.ConfigurationElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the shim of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationElementCollection">
            <summary>Shim type of System.Configuration.ConfigurationElementCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementCollection.#ctor(System.Configuration.ConfigurationElementCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AddElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_AddElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AddElementNameSetString">
            <summary>Sets the shim of ConfigurationElementCollection.set_AddElementName(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.AddElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_AddElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.AddElementNameSetString">
            <summary>Sets the shim of ConfigurationElementCollection.set_AddElementName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseAddConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseAddConfigurationElementBoolean">
            <summary>Sets the shim of ConfigurationElementCollection.BaseAdd(ConfigurationElement element, Boolean throwIfExists)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseAddInt32ConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseClear">
            <summary>Sets the shim of ConfigurationElementCollection.BaseClear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseGetAllKeys">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGetAllKeys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseGetInt32">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGet(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseGetKeyInt32">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseGetObject">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGet(Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseIndexOfConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.BaseIndexOf(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseIsRemovedObject">
            <summary>Sets the shim of ConfigurationElementCollection.BaseIsRemoved(Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseRemoveAtInt32">
            <summary>Sets the shim of ConfigurationElementCollection.BaseRemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.BaseRemoveObject">
            <summary>Sets the shim of ConfigurationElementCollection.BaseRemove(Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.ClearElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_ClearElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.ClearElementNameSetString">
            <summary>Sets the shim of ConfigurationElementCollection.set_ClearElementName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.CollectionTypeGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.CopyToConfigurationElementArrayInt32">
            <summary>Sets the shim of ConfigurationElementCollection.CopyTo(ConfigurationElement[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.CountGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.CreateNewElementString">
            <summary>Sets the shim of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.ElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.EmitClearGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_EmitClear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.EmitClearSetBoolean">
            <summary>Sets the shim of ConfigurationElementCollection.set_EmitClear(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.EqualsObject">
            <summary>Sets the shim of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ConfigurationElementCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.IsElementNameString">
            <summary>Sets the shim of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.IsElementRemovableConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.IsModified">
            <summary>Sets the shim of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.IsReadOnly">
            <summary>Sets the shim of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.RemoveElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_RemoveElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.RemoveElementNameSetString">
            <summary>Sets the shim of ConfigurationElementCollection.set_RemoveElementName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.ResetConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.ResetModified">
            <summary>Sets the shim of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.SerializeElementXmlWriterBoolean">
            <summary>Sets the shim of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.SetReadOnly">
            <summary>Sets the shim of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array arr, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.ThrowOnDuplicateGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.AllInstances.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the shim of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseAddConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseAddConfigurationElementBoolean">
            <summary>Sets the shim of ConfigurationElementCollection.BaseAdd(ConfigurationElement element, Boolean throwIfExists)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseClear">
            <summary>Sets the shim of ConfigurationElementCollection.BaseClear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseGetAllKeys">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGetAllKeys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseGetInt32">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGet(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseGetKeyInt32">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseGetObject">
            <summary>Sets the shim of ConfigurationElementCollection.BaseGet(Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseIndexOfConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.BaseIndexOf(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseIsRemovedObject">
            <summary>Sets the shim of ConfigurationElementCollection.BaseIsRemoved(Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseRemoveAtInt32">
            <summary>Sets the shim of ConfigurationElementCollection.BaseRemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.BaseRemoveObject">
            <summary>Sets the shim of ConfigurationElementCollection.BaseRemove(Object key)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.ClearElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_ClearElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.ClearElementNameSetString">
            <summary>Sets the shim of ConfigurationElementCollection.set_ClearElementName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.CollectionTypeGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.Constructor">
            <summary>Sets the shim of ConfigurationElementCollection.ConfigurationElementCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.ConstructorIComparer">
            <summary>Sets the shim of ConfigurationElementCollection.ConfigurationElementCollection(IComparer comparer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.CopyToConfigurationElementArrayInt32">
            <summary>Sets the shim of ConfigurationElementCollection.CopyTo(ConfigurationElement[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.CountGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.CreateNewElementString">
            <summary>Sets the shim of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.ElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.EmitClearGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_EmitClear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.EmitClearSetBoolean">
            <summary>Sets the shim of ConfigurationElementCollection.set_EmitClear(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.EqualsObject">
            <summary>Sets the shim of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.GetEnumerator">
            <summary>Sets the shim of ConfigurationElementCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.GetHashCode">
            <summary>Sets the shim of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.IsElementNameString">
            <summary>Sets the shim of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.IsElementRemovableConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.IsModified">
            <summary>Sets the shim of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.IsReadOnly">
            <summary>Sets the shim of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.IsSynchronizedGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.RemoveElementNameGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_RemoveElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.RemoveElementNameSetString">
            <summary>Sets the shim of ConfigurationElementCollection.set_RemoveElementName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.ResetConfigurationElement">
            <summary>Sets the shim of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.ResetModified">
            <summary>Sets the shim of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.SerializeElementXmlWriterBoolean">
            <summary>Sets the shim of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.SetReadOnly">
            <summary>Sets the shim of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.SyncRootGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array arr, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.ThrowOnDuplicateGet">
            <summary>Sets the shim of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the shim of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationElementProperty">
            <summary>Shim type of System.Configuration.ConfigurationElementProperty</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementProperty.#ctor(System.Configuration.ConfigurationElementProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationElementProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementProperty.AllInstances.ValidatorGet">
            <summary>Sets the shim of ConfigurationElementProperty.get_Validator()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationElementProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementProperty.ConstructorConfigurationValidatorBase">
            <summary>Sets the shim of ConfigurationElementProperty.ConfigurationElementProperty(ConfigurationValidatorBase validator)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationElementProperty.ValidatorGet">
            <summary>Sets the shim of ConfigurationElementProperty.get_Validator()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationErrorsException">
            <summary>Shim type of System.Configuration.ConfigurationErrorsException</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationErrorsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationErrorsException.#ctor(System.Configuration.ConfigurationErrorsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationErrorsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.AllInstances.BareMessageGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_BareMessage()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.AllInstances.ErrorsGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Errors()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.AllInstances.FilenameGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Filename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationErrorsException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.AllInstances.LineGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Line()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.AllInstances.MessageGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.BareMessageGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_BareMessage()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationErrorsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationErrorsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationErrorsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.Constructor">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorString">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorStringException">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorStringExceptionStringInt32">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message, Exception inner, String filename, Int32 line)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorStringExceptionXmlNode">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message, Exception inner, XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorStringExceptionXmlReader">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message, Exception inner, XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorStringStringInt32">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message, String filename, Int32 line)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorStringXmlNode">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message, XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ConstructorStringXmlReader">
            <summary>Sets the shim of ConfigurationErrorsException.ConfigurationErrorsException(String message, XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.ErrorsGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Errors()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.FilenameGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Filename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.GetFilenameXmlNode">
            <summary>Sets the shim of ConfigurationErrorsException.GetFilename(XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.GetFilenameXmlReader">
            <summary>Sets the shim of ConfigurationErrorsException.GetFilename(XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.GetLineNumberXmlNode">
            <summary>Sets the shim of ConfigurationErrorsException.GetLineNumber(XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.GetLineNumberXmlReader">
            <summary>Sets the shim of ConfigurationErrorsException.GetLineNumber(XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationErrorsException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.LineGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Line()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.MessageGet">
            <summary>Sets the shim of ConfigurationErrorsException.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationErrorsException.SafeFilenameString">
            <summary>Sets the shim of ConfigurationErrorsException.SafeFilename(String filename)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationFileMap">
            <summary>Shim type of System.Configuration.ConfigurationFileMap</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationFileMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationFileMap.#ctor(System.Configuration.ConfigurationFileMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationFileMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.AllInstances.Clone">
            <summary>Sets the shim of ConfigurationFileMap.Clone()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.AllInstances.MachineConfigFilenameGet">
            <summary>Sets the shim of ConfigurationFileMap.get_MachineConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.AllInstances.MachineConfigFilenameSetString">
            <summary>Sets the shim of ConfigurationFileMap.set_MachineConfigFilename(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationFileMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationFileMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationFileMap.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.Clone">
            <summary>Sets the shim of ConfigurationFileMap.Clone()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.Constructor">
            <summary>Sets the shim of ConfigurationFileMap.ConfigurationFileMap()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.ConstructorString">
            <summary>Sets the shim of ConfigurationFileMap.ConfigurationFileMap(String machineConfigFilename)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.MachineConfigFilenameGet">
            <summary>Sets the shim of ConfigurationFileMap.get_MachineConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationFileMap.MachineConfigFilenameSetString">
            <summary>Sets the shim of ConfigurationFileMap.set_MachineConfigFilename(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationLocation">
            <summary>Shim type of System.Configuration.ConfigurationLocation</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocation.#ctor(System.Configuration.ConfigurationLocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationLocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocation.AllInstances.Constructor">
            <summary>Sets the shim of ConfigurationLocation.ConfigurationLocation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocation.AllInstances.OpenConfiguration">
            <summary>Sets the shim of ConfigurationLocation.OpenConfiguration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocation.AllInstances.PathGet">
            <summary>Sets the shim of ConfigurationLocation.get_Path()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocation.Constructor">
            <summary>Sets the shim of ConfigurationLocation.ConfigurationLocation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocation.OpenConfiguration">
            <summary>Sets the shim of ConfigurationLocation.OpenConfiguration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocation.PathGet">
            <summary>Sets the shim of ConfigurationLocation.get_Path()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationLocationCollection">
            <summary>Shim type of System.Configuration.ConfigurationLocationCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocationCollection.#ctor(System.Configuration.ConfigurationLocationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationLocationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocationCollection.AllInstances.Constructor">
            <summary>Sets the shim of ConfigurationLocationCollection.ConfigurationLocationCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocationCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ConfigurationLocationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLocationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocationCollection.Constructor">
            <summary>Sets the shim of ConfigurationLocationCollection.ConfigurationLocationCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLocationCollection.ItemGetInt32">
            <summary>Sets the shim of ConfigurationLocationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationLockCollection">
            <summary>Shim type of System.Configuration.ConfigurationLockCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLockCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLockCollection.#ctor(System.Configuration.ConfigurationLockCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AddString">
            <summary>Sets the shim of ConfigurationLockCollection.Add(String name)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.AddString">
            <summary>Sets the shim of ConfigurationLockCollection.Add(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.AttributeListGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_AttributeList()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.Clear">
            <summary>Sets the shim of ConfigurationLockCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.Constructor">
            <summary>Sets the shim of ConfigurationLockCollection.ConfigurationLockCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.ContainsString">
            <summary>Sets the shim of ConfigurationLockCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.CopyToStringArrayInt32">
            <summary>Sets the shim of ConfigurationLockCollection.CopyTo(String[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.CountGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ConfigurationLockCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.HasParentElementsGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_HasParentElements()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.IsModifiedGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.IsReadOnlyString">
            <summary>Sets the shim of ConfigurationLockCollection.IsReadOnly(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ConfigurationLockCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.SetFromListString">
            <summary>Sets the shim of ConfigurationLockCollection.SetFromList(String attributeList)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ConfigurationLockCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.AttributeListGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_AttributeList()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLockCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLockCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLockCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationLockCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.Clear">
            <summary>Sets the shim of ConfigurationLockCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.Constructor">
            <summary>Sets the shim of ConfigurationLockCollection.ConfigurationLockCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.ContainsString">
            <summary>Sets the shim of ConfigurationLockCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.CopyToStringArrayInt32">
            <summary>Sets the shim of ConfigurationLockCollection.CopyTo(String[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.CountGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.GetEnumerator">
            <summary>Sets the shim of ConfigurationLockCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.HasParentElementsGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_HasParentElements()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.IsModifiedGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.IsReadOnlyString">
            <summary>Sets the shim of ConfigurationLockCollection.IsReadOnly(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.IsSynchronizedGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.RemoveString">
            <summary>Sets the shim of ConfigurationLockCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.SetFromListString">
            <summary>Sets the shim of ConfigurationLockCollection.SetFromList(String attributeList)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.SyncRootGet">
            <summary>Sets the shim of ConfigurationLockCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationLockCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ConfigurationLockCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationManager">
            <summary>Shim type of System.Configuration.ConfigurationManager</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.AppSettingsGet">
            <summary>Sets the shim of ConfigurationManager.get_AppSettings()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.ConnectionStringsGet">
            <summary>Sets the shim of ConfigurationManager.get_ConnectionStrings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.GetSectionString">
            <summary>Sets the shim of ConfigurationManager.GetSection(String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.OpenExeConfigurationConfigurationUserLevel">
            <summary>Sets the shim of ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel userLevel)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.OpenExeConfigurationString">
            <summary>Sets the shim of ConfigurationManager.OpenExeConfiguration(String exePath)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.OpenMachineConfiguration">
            <summary>Sets the shim of ConfigurationManager.OpenMachineConfiguration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.OpenMappedExeConfigurationExeConfigurationFileMapConfigurationUserLevel">
            <summary>Sets the shim of ConfigurationManager.OpenMappedExeConfiguration(ExeConfigurationFileMap fileMap, ConfigurationUserLevel userLevel)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.OpenMappedExeConfigurationExeConfigurationFileMapConfigurationUserLevelBoolean">
            <summary>Sets the shim of ConfigurationManager.OpenMappedExeConfiguration(ExeConfigurationFileMap fileMap, ConfigurationUserLevel userLevel, Boolean preLoad)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.OpenMappedMachineConfigurationConfigurationFileMap">
            <summary>Sets the shim of ConfigurationManager.OpenMappedMachineConfiguration(ConfigurationFileMap fileMap)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.RefreshSectionString">
            <summary>Sets the shim of ConfigurationManager.RefreshSection(String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationManager.StaticConstructor">
            <summary>Sets the shim of ConfigurationManager.ConfigurationManager()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPermission">
            <summary>Shim type of System.Configuration.ConfigurationPermission</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.#ctor(System.Configuration.ConfigurationPermission)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances.Copy">
            <summary>Sets the shim of ConfigurationPermission.Copy()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances.FromXmlSecurityElement">
            <summary>Sets the shim of ConfigurationPermission.FromXml(SecurityElement securityElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances.IntersectIPermission">
            <summary>Sets the shim of ConfigurationPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances.IsSubsetOfIPermission">
            <summary>Sets the shim of ConfigurationPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances.IsUnrestricted">
            <summary>Sets the shim of ConfigurationPermission.IsUnrestricted()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances.ToXml">
            <summary>Sets the shim of ConfigurationPermission.ToXml()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.AllInstances.UnionIPermission">
            <summary>Sets the shim of ConfigurationPermission.Union(IPermission target)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.Bind(System.Security.IPermission)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.Bind(System.Security.ISecurityEncodable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.Bind(System.Security.IStackWalk)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermission.Bind(System.Security.Permissions.IUnrestrictedPermission)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.ConstructorPermissionState">
            <summary>Sets the shim of ConfigurationPermission.ConfigurationPermission(PermissionState state)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.Copy">
            <summary>Sets the shim of ConfigurationPermission.Copy()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.FromXmlSecurityElement">
            <summary>Sets the shim of ConfigurationPermission.FromXml(SecurityElement securityElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.IntersectIPermission">
            <summary>Sets the shim of ConfigurationPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.IsSubsetOfIPermission">
            <summary>Sets the shim of ConfigurationPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.IsUnrestricted">
            <summary>Sets the shim of ConfigurationPermission.IsUnrestricted()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.ToXml">
            <summary>Sets the shim of ConfigurationPermission.ToXml()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermission.UnionIPermission">
            <summary>Sets the shim of ConfigurationPermission.Union(IPermission target)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPermissionAttribute">
            <summary>Shim type of System.Configuration.ConfigurationPermissionAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.#ctor(System.Configuration.ConfigurationPermissionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.AllInstances.CreatePermission">
            <summary>Sets the shim of ConfigurationPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.ConstructorSecurityAction">
            <summary>Sets the shim of ConfigurationPermissionAttribute.ConfigurationPermissionAttribute(SecurityAction action)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPermissionAttribute.CreatePermission">
            <summary>Sets the shim of ConfigurationPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationProperty">
            <summary>Shim type of System.Configuration.ConfigurationProperty</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationProperty.#ctor(System.Configuration.ConfigurationProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.ConverterGet">
            <summary>Sets the shim of ConfigurationProperty.get_Converter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.DefaultValueGet">
            <summary>Sets the shim of ConfigurationProperty.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.DescriptionGet">
            <summary>Sets the shim of ConfigurationProperty.get_Description()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.IsAssemblyStringTransformationRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsAssemblyStringTransformationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.IsDefaultCollectionGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsDefaultCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.IsKeyGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.IsRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.IsTypeStringTransformationRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsTypeStringTransformationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.IsVersionCheckRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsVersionCheckRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.NameGet">
            <summary>Sets the shim of ConfigurationProperty.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.TypeGet">
            <summary>Sets the shim of ConfigurationProperty.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.AllInstances.ValidatorGet">
            <summary>Sets the shim of ConfigurationProperty.get_Validator()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.ConstructorStringType">
            <summary>Sets the shim of ConfigurationProperty.ConfigurationProperty(String name, Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.ConstructorStringTypeObject">
            <summary>Sets the shim of ConfigurationProperty.ConfigurationProperty(String name, Type type, Object defaultValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.ConstructorStringTypeObjectConfigurationPropertyOptions">
            <summary>Sets the shim of ConfigurationProperty.ConfigurationProperty(String name, Type type, Object defaultValue, ConfigurationPropertyOptions options)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.ConstructorStringTypeObjectTypeConverterConfigurationValidatorBaseConfigurationPropertyOptions">
            <summary>Sets the shim of ConfigurationProperty.ConfigurationProperty(String name, Type type, Object defaultValue, TypeConverter typeConverter, ConfigurationValidatorBase validator, ConfigurationPropertyOptions options)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.ConstructorStringTypeObjectTypeConverterConfigurationValidatorBaseConfigurationPropertyOptionsString">
            <summary>Sets the shim of ConfigurationProperty.ConfigurationProperty(String name, Type type, Object defaultValue, TypeConverter typeConverter, ConfigurationValidatorBase validator, ConfigurationPropertyOptions options, String description)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.ConverterGet">
            <summary>Sets the shim of ConfigurationProperty.get_Converter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.DefaultValueGet">
            <summary>Sets the shim of ConfigurationProperty.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.DescriptionGet">
            <summary>Sets the shim of ConfigurationProperty.get_Description()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.IsAssemblyStringTransformationRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsAssemblyStringTransformationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.IsDefaultCollectionGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsDefaultCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.IsKeyGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.IsRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.IsTypeStringTransformationRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsTypeStringTransformationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.IsVersionCheckRequiredGet">
            <summary>Sets the shim of ConfigurationProperty.get_IsVersionCheckRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.NameGet">
            <summary>Sets the shim of ConfigurationProperty.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.StaticConstructor">
            <summary>Sets the shim of ConfigurationProperty.ConfigurationProperty()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.TypeGet">
            <summary>Sets the shim of ConfigurationProperty.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationProperty.ValidatorGet">
            <summary>Sets the shim of ConfigurationProperty.get_Validator()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPropertyAttribute">
            <summary>Shim type of System.Configuration.ConfigurationPropertyAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.#ctor(System.Configuration.ConfigurationPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.DefaultValueGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.DefaultValueSetObject">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_DefaultValue(Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.IsDefaultCollectionGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_IsDefaultCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.IsDefaultCollectionSetBoolean">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_IsDefaultCollection(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.IsKeyGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_IsKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.IsKeySetBoolean">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_IsKey(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.IsRequiredGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_IsRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.IsRequiredSetBoolean">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_IsRequired(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.OptionsGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_Options()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.AllInstances.OptionsSetConfigurationPropertyOptions">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_Options(ConfigurationPropertyOptions value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.ConstructorString">
            <summary>Sets the shim of ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.DefaultValueGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.DefaultValueSetObject">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_DefaultValue(Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.IsDefaultCollectionGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_IsDefaultCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.IsDefaultCollectionSetBoolean">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_IsDefaultCollection(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.IsKeyGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_IsKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.IsKeySetBoolean">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_IsKey(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.IsRequiredGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_IsRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.IsRequiredSetBoolean">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_IsRequired(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.NameGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.OptionsGet">
            <summary>Sets the shim of ConfigurationPropertyAttribute.get_Options()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.OptionsSetConfigurationPropertyOptions">
            <summary>Sets the shim of ConfigurationPropertyAttribute.set_Options(ConfigurationPropertyOptions value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyAttribute.StaticConstructor">
            <summary>Sets the shim of ConfigurationPropertyAttribute.ConfigurationPropertyAttribute()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPropertyCollection">
            <summary>Shim type of System.Configuration.ConfigurationPropertyCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyCollection.#ctor(System.Configuration.ConfigurationPropertyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AddConfigurationProperty">
            <summary>Sets the shim of ConfigurationPropertyCollection.Add(ConfigurationProperty property)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.AddConfigurationProperty">
            <summary>Sets the shim of ConfigurationPropertyCollection.Add(ConfigurationProperty property)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.Clear">
            <summary>Sets the shim of ConfigurationPropertyCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.ContainsString">
            <summary>Sets the shim of ConfigurationPropertyCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.CopyToConfigurationPropertyArrayInt32">
            <summary>Sets the shim of ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.CountGet">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ConfigurationPropertyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ConfigurationPropertyCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.Clear">
            <summary>Sets the shim of ConfigurationPropertyCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.Constructor">
            <summary>Sets the shim of ConfigurationPropertyCollection.ConfigurationPropertyCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.ContainsString">
            <summary>Sets the shim of ConfigurationPropertyCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.CopyToConfigurationPropertyArrayInt32">
            <summary>Sets the shim of ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.CountGet">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.GetEnumerator">
            <summary>Sets the shim of ConfigurationPropertyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.IsSynchronizedGet">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.ItemGetString">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.RemoveString">
            <summary>Sets the shim of ConfigurationPropertyCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.SyncRootGet">
            <summary>Sets the shim of ConfigurationPropertyCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationPropertyCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSection">
            <summary>Shim type of System.Configuration.ConfigurationSection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSection.#ctor(System.Configuration.ConfigurationSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.DeserializeSectionXmlReader">
            <summary>Sets the shim of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.GetRuntimeObject">
            <summary>Sets the shim of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.IsModified">
            <summary>Sets the shim of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.ResetModified">
            <summary>Sets the shim of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.SectionInformationGet">
            <summary>Sets the shim of ConfigurationSection.get_SectionInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the shim of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the shim of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.AllInstances.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the shim of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.Constructor">
            <summary>Sets the shim of ConfigurationSection.ConfigurationSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.DeserializeSectionXmlReader">
            <summary>Sets the shim of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.GetRuntimeObject">
            <summary>Sets the shim of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.IsModified">
            <summary>Sets the shim of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.ResetModified">
            <summary>Sets the shim of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.SectionInformationGet">
            <summary>Sets the shim of ConfigurationSection.get_SectionInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the shim of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the shim of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSection.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the shim of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSectionCollection">
            <summary>Shim type of System.Configuration.ConfigurationSectionCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.#ctor(System.Configuration.ConfigurationSectionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AddStringConfigurationSection">
            <summary>Sets the shim of ConfigurationSectionCollection.Add(String name, ConfigurationSection section)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.AddStringConfigurationSection">
            <summary>Sets the shim of ConfigurationSectionCollection.Add(String name, ConfigurationSection section)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.Clear">
            <summary>Sets the shim of ConfigurationSectionCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.Constructor">
            <summary>Sets the shim of ConfigurationSectionCollection.ConfigurationSectionCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.CopyToConfigurationSectionArrayInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.CopyTo(ConfigurationSection[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.CountGet">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ConfigurationSectionCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.GetInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.GetKeyInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationSectionCollection.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.GetString">
            <summary>Sets the shim of ConfigurationSectionCollection.Get(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.KeysGet">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Keys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ConfigurationSectionCollection.Remove(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionCollection.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.Clear">
            <summary>Sets the shim of ConfigurationSectionCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.Constructor">
            <summary>Sets the shim of ConfigurationSectionCollection.ConfigurationSectionCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.CopyToConfigurationSectionArrayInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.CopyTo(ConfigurationSection[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.CountGet">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.GetEnumerator">
            <summary>Sets the shim of ConfigurationSectionCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.GetInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.GetKeyInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationSectionCollection.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.GetString">
            <summary>Sets the shim of ConfigurationSectionCollection.Get(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.ItemGetInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.ItemGetString">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.KeysGet">
            <summary>Sets the shim of ConfigurationSectionCollection.get_Keys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.RemoveAtInt32">
            <summary>Sets the shim of ConfigurationSectionCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionCollection.RemoveString">
            <summary>Sets the shim of ConfigurationSectionCollection.Remove(String name)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSectionGroup">
            <summary>Shim type of System.Configuration.ConfigurationSectionGroup</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroup.#ctor(System.Configuration.ConfigurationSectionGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.ForceDeclaration">
            <summary>Sets the shim of ConfigurationSectionGroup.ForceDeclaration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.ForceDeclarationBoolean">
            <summary>Sets the shim of ConfigurationSectionGroup.ForceDeclaration(Boolean force)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.IsDeclarationRequiredGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_IsDeclarationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.IsDeclaredGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_IsDeclared()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.NameGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.SectionGroupNameGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_SectionGroupName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.SectionGroupsGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_SectionGroups()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.SectionsGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_Sections()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.ShouldSerializeSectionGroupInTargetVersionFrameworkName">
            <summary>Sets the shim of ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.TypeGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.AllInstances.TypeSetString">
            <summary>Sets the shim of ConfigurationSectionGroup.set_Type(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.Constructor">
            <summary>Sets the shim of ConfigurationSectionGroup.ConfigurationSectionGroup()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.ForceDeclaration">
            <summary>Sets the shim of ConfigurationSectionGroup.ForceDeclaration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.ForceDeclarationBoolean">
            <summary>Sets the shim of ConfigurationSectionGroup.ForceDeclaration(Boolean force)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.IsDeclarationRequiredGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_IsDeclarationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.IsDeclaredGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_IsDeclared()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.NameGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.SectionGroupNameGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_SectionGroupName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.SectionGroupsGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_SectionGroups()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.SectionsGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_Sections()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersionFrameworkName">
            <summary>Sets the shim of ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.TypeGet">
            <summary>Sets the shim of ConfigurationSectionGroup.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroup.TypeSetString">
            <summary>Sets the shim of ConfigurationSectionGroup.set_Type(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection">
            <summary>Shim type of System.Configuration.ConfigurationSectionGroupCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.#ctor(System.Configuration.ConfigurationSectionGroupCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AddStringConfigurationSectionGroup">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Add(String name, ConfigurationSectionGroup sectionGroup)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.AddStringConfigurationSectionGroup">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Add(String name, ConfigurationSectionGroup sectionGroup)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.Clear">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.Constructor">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.ConfigurationSectionGroupCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.CopyToConfigurationSectionGroupArrayInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.CopyTo(ConfigurationSectionGroup[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.CountGet">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.GetInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.GetKeyInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.GetString">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Get(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.KeysGet">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Keys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Remove(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.Clear">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.Constructor">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.ConfigurationSectionGroupCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.CopyToConfigurationSectionGroupArrayInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.CopyTo(ConfigurationSectionGroup[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.CountGet">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.GetEnumerator">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.GetInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.GetKeyInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.GetString">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Get(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.ItemGetInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.ItemGetString">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.KeysGet">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.get_Keys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.RemoveAtInt32">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSectionGroupCollection.RemoveString">
            <summary>Sets the shim of ConfigurationSectionGroupCollection.Remove(String name)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationValidatorAttribute">
            <summary>Shim type of System.Configuration.ConfigurationValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.#ctor(System.Configuration.ConfigurationValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of ConfigurationValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.AllInstances.ValidatorTypeGet">
            <summary>Sets the shim of ConfigurationValidatorAttribute.get_ValidatorType()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.Constructor">
            <summary>Sets the shim of ConfigurationValidatorAttribute.ConfigurationValidatorAttribute()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.ConstructorType">
            <summary>Sets the shim of ConfigurationValidatorAttribute.ConfigurationValidatorAttribute(Type validator)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of ConfigurationValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorAttribute.ValidatorTypeGet">
            <summary>Sets the shim of ConfigurationValidatorAttribute.get_ValidatorType()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationValidatorBase">
            <summary>Shim type of System.Configuration.ConfigurationValidatorBase</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationValidatorBase.#ctor(System.Configuration.ConfigurationValidatorBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationValidatorBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorBase.AllInstances.CanValidateType">
            <summary>Sets the shim of ConfigurationValidatorBase.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationValidatorBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationValidatorBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorBase.CanValidateType">
            <summary>Sets the shim of ConfigurationValidatorBase.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationValidatorBase.Constructor">
            <summary>Sets the shim of ConfigurationValidatorBase.ConfigurationValidatorBase()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConnectionStringSettings">
            <summary>Shim type of System.Configuration.ConnectionStringSettings</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettings.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of ConnectionStringSettings.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.ConnectionStringSetString">
            <summary>Sets the shim of ConnectionStringSettings.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.NameGet">
            <summary>Sets the shim of ConnectionStringSettings.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.NameSetString">
            <summary>Sets the shim of ConnectionStringSettings.set_Name(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.PropertiesGet">
            <summary>Sets the shim of ConnectionStringSettings.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.ProviderNameGet">
            <summary>Sets the shim of ConnectionStringSettings.get_ProviderName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.ProviderNameSetString">
            <summary>Sets the shim of ConnectionStringSettings.set_ProviderName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.AllInstances.ToString01">
            <summary>Sets the shim of ConnectionStringSettings.ToString()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.ConnectionStringGet">
            <summary>Sets the shim of ConnectionStringSettings.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.ConnectionStringSetString">
            <summary>Sets the shim of ConnectionStringSettings.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.Constructor">
            <summary>Sets the shim of ConnectionStringSettings.ConnectionStringSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.ConstructorStringString">
            <summary>Sets the shim of ConnectionStringSettings.ConnectionStringSettings(String name, String connectionString)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.ConstructorStringStringString">
            <summary>Sets the shim of ConnectionStringSettings.ConnectionStringSettings(String name, String connectionString, String providerName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.NameGet">
            <summary>Sets the shim of ConnectionStringSettings.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.NameSetString">
            <summary>Sets the shim of ConnectionStringSettings.set_Name(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.PropertiesGet">
            <summary>Sets the shim of ConnectionStringSettings.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.ProviderNameGet">
            <summary>Sets the shim of ConnectionStringSettings.get_ProviderName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.ProviderNameSetString">
            <summary>Sets the shim of ConnectionStringSettings.set_ProviderName(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.StaticConstructor">
            <summary>Sets the shim of ConnectionStringSettings.ConnectionStringSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettings.ToString">
            <summary>Sets the shim of ConnectionStringSettings.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConnectionStringSettingsCollection">
            <summary>Shim type of System.Configuration.ConnectionStringSettingsCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.#ctor(System.Configuration.ConnectionStringSettingsCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AddConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Add(ConnectionStringSettings settings)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.AddConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Add(ConnectionStringSettings settings)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.BaseAddInt32ConfigurationElement">
            <summary>Sets the shim of ConnectionStringSettingsCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.Clear">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of ConnectionStringSettingsCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of ConnectionStringSettingsCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.IndexOfConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.IndexOf(ConnectionStringSettings settings)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ConnectionStringSettingsCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ConnectionStringSettingsCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.ItemSetInt32ConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.set_Item(Int32 index, ConnectionStringSettings value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.PropertiesGet">
            <summary>Sets the shim of ConnectionStringSettingsCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of ConnectionStringSettingsCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.RemoveConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Remove(ConnectionStringSettings settings)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the shim of ConnectionStringSettingsCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.Clear">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.Constructor">
            <summary>Sets the shim of ConnectionStringSettingsCollection.ConnectionStringSettingsCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.CreateNewElement">
            <summary>Sets the shim of ConnectionStringSettingsCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of ConnectionStringSettingsCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.IndexOfConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.IndexOf(ConnectionStringSettings settings)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.ItemGetInt32">
            <summary>Sets the shim of ConnectionStringSettingsCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.ItemGetString">
            <summary>Sets the shim of ConnectionStringSettingsCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.ItemSetInt32ConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.set_Item(Int32 index, ConnectionStringSettings value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.PropertiesGet">
            <summary>Sets the shim of ConnectionStringSettingsCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.RemoveAtInt32">
            <summary>Sets the shim of ConnectionStringSettingsCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.RemoveConnectionStringSettings">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Remove(ConnectionStringSettings settings)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.RemoveString">
            <summary>Sets the shim of ConnectionStringSettingsCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringSettingsCollection.StaticConstructor">
            <summary>Sets the shim of ConnectionStringSettingsCollection.ConnectionStringSettingsCollection()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConnectionStringsSection">
            <summary>Shim type of System.Configuration.ConnectionStringsSection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringsSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringsSection.#ctor(System.Configuration.ConnectionStringsSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConnectionStringsSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.AllInstances.ConnectionStringsGet">
            <summary>Sets the shim of ConnectionStringsSection.get_ConnectionStrings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.AllInstances.GetRuntimeObject">
            <summary>Sets the shim of ConnectionStringsSection.GetRuntimeObject()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.AllInstances.PropertiesGet">
            <summary>Sets the shim of ConnectionStringsSection.get_Properties()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringsSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConnectionStringsSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.ConnectionStringsGet">
            <summary>Sets the shim of ConnectionStringsSection.get_ConnectionStrings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.Constructor">
            <summary>Sets the shim of ConnectionStringsSection.ConnectionStringsSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.GetRuntimeObject">
            <summary>Sets the shim of ConnectionStringsSection.GetRuntimeObject()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.PropertiesGet">
            <summary>Sets the shim of ConnectionStringsSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConnectionStringsSection.StaticConstructor">
            <summary>Sets the shim of ConnectionStringsSection.ConnectionStringsSection()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimContextInformation">
            <summary>Shim type of System.Configuration.ContextInformation</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimContextInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimContextInformation.#ctor(System.Configuration.ContextInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimContextInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.AllInstances.Constructor">
            <summary>Sets the shim of ContextInformation.ContextInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.AllInstances.GetSectionString">
            <summary>Sets the shim of ContextInformation.GetSection(String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.AllInstances.HostingContextGet">
            <summary>Sets the shim of ContextInformation.get_HostingContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.AllInstances.IsMachineLevelGet">
            <summary>Sets the shim of ContextInformation.get_IsMachineLevel()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimContextInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimContextInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.Constructor">
            <summary>Sets the shim of ContextInformation.ContextInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.GetSectionString">
            <summary>Sets the shim of ContextInformation.GetSection(String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.HostingContextGet">
            <summary>Sets the shim of ContextInformation.get_HostingContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimContextInformation.IsMachineLevelGet">
            <summary>Sets the shim of ContextInformation.get_IsMachineLevel()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimDefaultSection">
            <summary>Shim type of System.Configuration.DefaultSection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultSection.#ctor(System.Configuration.DefaultSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimDefaultSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.AllInstances.DeserializeSectionXmlReader">
            <summary>Sets the shim of DefaultSection.DeserializeSection(XmlReader xmlReader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.AllInstances.IsModified">
            <summary>Sets the shim of DefaultSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.AllInstances.PropertiesGet">
            <summary>Sets the shim of DefaultSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.AllInstances.ResetConfigurationElement">
            <summary>Sets the shim of DefaultSection.Reset(ConfigurationElement parentSection)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.AllInstances.ResetModified">
            <summary>Sets the shim of DefaultSection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.AllInstances.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of DefaultSection.SerializeSection(ConfigurationElement parentSection, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.Constructor">
            <summary>Sets the shim of DefaultSection.DefaultSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.DeserializeSectionXmlReader">
            <summary>Sets the shim of DefaultSection.DeserializeSection(XmlReader xmlReader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.IsModified">
            <summary>Sets the shim of DefaultSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.PropertiesGet">
            <summary>Sets the shim of DefaultSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.ResetConfigurationElement">
            <summary>Sets the shim of DefaultSection.Reset(ConfigurationElement parentSection)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.ResetModified">
            <summary>Sets the shim of DefaultSection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of DefaultSection.SerializeSection(ConfigurationElement parentSection, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimDefaultValidator">
            <summary>Shim type of System.Configuration.DefaultValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultValidator.#ctor(System.Configuration.DefaultValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimDefaultValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of DefaultValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of DefaultValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDefaultValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultValidator.CanValidateType">
            <summary>Sets the shim of DefaultValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultValidator.Constructor">
            <summary>Sets the shim of DefaultValidator.DefaultValidator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDefaultValidator.ValidateObject">
            <summary>Sets the shim of DefaultValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider">
            <summary>Shim type of System.Configuration.DpapiProtectedConfigurationProvider</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.#ctor(System.Configuration.DpapiProtectedConfigurationProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.AllInstances.DecryptXmlNode">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.Decrypt(XmlNode encryptedNode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.AllInstances.EncryptXmlNode">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.Encrypt(XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.AllInstances.InitializeStringNameValueCollection">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.Initialize(String name, NameValueCollection configurationValues)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.AllInstances.UseMachineProtectionGet">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.get_UseMachineProtection()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.Constructor">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.DpapiProtectedConfigurationProvider()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.DecryptXmlNode">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.Decrypt(XmlNode encryptedNode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.EncryptXmlNode">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.Encrypt(XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.InitializeStringNameValueCollection">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.Initialize(String name, NameValueCollection configurationValues)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimDpapiProtectedConfigurationProvider.UseMachineProtectionGet">
            <summary>Sets the shim of DpapiProtectedConfigurationProvider.get_UseMachineProtection()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimElementInformation">
            <summary>Shim type of System.Configuration.ElementInformation</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimElementInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimElementInformation.#ctor(System.Configuration.ElementInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimElementInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.Constructor">
            <summary>Sets the shim of ElementInformation.ElementInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.ErrorsGet">
            <summary>Sets the shim of ElementInformation.get_Errors()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.IsCollectionGet">
            <summary>Sets the shim of ElementInformation.get_IsCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.IsLockedGet">
            <summary>Sets the shim of ElementInformation.get_IsLocked()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.IsPresentGet">
            <summary>Sets the shim of ElementInformation.get_IsPresent()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.LineNumberGet">
            <summary>Sets the shim of ElementInformation.get_LineNumber()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.PropertiesGet">
            <summary>Sets the shim of ElementInformation.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.SourceGet">
            <summary>Sets the shim of ElementInformation.get_Source()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.TypeGet">
            <summary>Sets the shim of ElementInformation.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.AllInstances.ValidatorGet">
            <summary>Sets the shim of ElementInformation.get_Validator()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimElementInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimElementInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.Constructor">
            <summary>Sets the shim of ElementInformation.ElementInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.ErrorsGet">
            <summary>Sets the shim of ElementInformation.get_Errors()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.IsCollectionGet">
            <summary>Sets the shim of ElementInformation.get_IsCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.IsLockedGet">
            <summary>Sets the shim of ElementInformation.get_IsLocked()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.IsPresentGet">
            <summary>Sets the shim of ElementInformation.get_IsPresent()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.LineNumberGet">
            <summary>Sets the shim of ElementInformation.get_LineNumber()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.PropertiesGet">
            <summary>Sets the shim of ElementInformation.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.SourceGet">
            <summary>Sets the shim of ElementInformation.get_Source()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.TypeGet">
            <summary>Sets the shim of ElementInformation.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimElementInformation.ValidatorGet">
            <summary>Sets the shim of ElementInformation.get_Validator()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimExeConfigurationFileMap">
            <summary>Shim type of System.Configuration.ExeConfigurationFileMap</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeConfigurationFileMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeConfigurationFileMap.#ctor(System.Configuration.ExeConfigurationFileMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances.Clone">
            <summary>Sets the shim of ExeConfigurationFileMap.Clone()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances.ExeConfigFilenameGet">
            <summary>Sets the shim of ExeConfigurationFileMap.get_ExeConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances.ExeConfigFilenameSetString">
            <summary>Sets the shim of ExeConfigurationFileMap.set_ExeConfigFilename(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances.LocalUserConfigFilenameGet">
            <summary>Sets the shim of ExeConfigurationFileMap.get_LocalUserConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances.LocalUserConfigFilenameSetString">
            <summary>Sets the shim of ExeConfigurationFileMap.set_LocalUserConfigFilename(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances.RoamingUserConfigFilenameGet">
            <summary>Sets the shim of ExeConfigurationFileMap.get_RoamingUserConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.AllInstances.RoamingUserConfigFilenameSetString">
            <summary>Sets the shim of ExeConfigurationFileMap.set_RoamingUserConfigFilename(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeConfigurationFileMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeConfigurationFileMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeConfigurationFileMap.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.Clone">
            <summary>Sets the shim of ExeConfigurationFileMap.Clone()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.Constructor">
            <summary>Sets the shim of ExeConfigurationFileMap.ExeConfigurationFileMap()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.ConstructorString">
            <summary>Sets the shim of ExeConfigurationFileMap.ExeConfigurationFileMap(String machineConfigFileName)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.ExeConfigFilenameGet">
            <summary>Sets the shim of ExeConfigurationFileMap.get_ExeConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.ExeConfigFilenameSetString">
            <summary>Sets the shim of ExeConfigurationFileMap.set_ExeConfigFilename(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.LocalUserConfigFilenameGet">
            <summary>Sets the shim of ExeConfigurationFileMap.get_LocalUserConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.LocalUserConfigFilenameSetString">
            <summary>Sets the shim of ExeConfigurationFileMap.set_LocalUserConfigFilename(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.RoamingUserConfigFilenameGet">
            <summary>Sets the shim of ExeConfigurationFileMap.get_RoamingUserConfigFilename()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeConfigurationFileMap.RoamingUserConfigFilenameSetString">
            <summary>Sets the shim of ExeConfigurationFileMap.set_RoamingUserConfigFilename(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimExeContext">
            <summary>Shim type of System.Configuration.ExeContext</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeContext.#ctor(System.Configuration.ExeContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimExeContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeContext.AllInstances.Constructor">
            <summary>Sets the shim of ExeContext.ExeContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeContext.AllInstances.ExePathGet">
            <summary>Sets the shim of ExeContext.get_ExePath()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeContext.AllInstances.UserLevelGet">
            <summary>Sets the shim of ExeContext.get_UserLevel()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimExeContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeContext.Constructor">
            <summary>Sets the shim of ExeContext.ExeContext()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeContext.ExePathGet">
            <summary>Sets the shim of ExeContext.get_ExePath()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimExeContext.UserLevelGet">
            <summary>Sets the shim of ExeContext.get_UserLevel()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimGenericEnumConverter">
            <summary>Shim type of System.Configuration.GenericEnumConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimGenericEnumConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimGenericEnumConverter.#ctor(System.Configuration.GenericEnumConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimGenericEnumConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimGenericEnumConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of GenericEnumConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimGenericEnumConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of GenericEnumConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimGenericEnumConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimGenericEnumConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimGenericEnumConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimGenericEnumConverter.ConstructorType">
            <summary>Sets the shim of GenericEnumConverter.GenericEnumConverter(Type typeEnum)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimGenericEnumConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of GenericEnumConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimGenericEnumConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of GenericEnumConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimIgnoreSection">
            <summary>Shim type of System.Configuration.IgnoreSection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIgnoreSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIgnoreSection.#ctor(System.Configuration.IgnoreSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimIgnoreSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.AllInstances.DeserializeSectionXmlReader">
            <summary>Sets the shim of IgnoreSection.DeserializeSection(XmlReader xmlReader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.AllInstances.IsModified">
            <summary>Sets the shim of IgnoreSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.AllInstances.PropertiesGet">
            <summary>Sets the shim of IgnoreSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.AllInstances.ResetConfigurationElement">
            <summary>Sets the shim of IgnoreSection.Reset(ConfigurationElement parentSection)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.AllInstances.ResetModified">
            <summary>Sets the shim of IgnoreSection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.AllInstances.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of IgnoreSection.SerializeSection(ConfigurationElement parentSection, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIgnoreSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIgnoreSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.Constructor">
            <summary>Sets the shim of IgnoreSection.IgnoreSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.DeserializeSectionXmlReader">
            <summary>Sets the shim of IgnoreSection.DeserializeSection(XmlReader xmlReader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.IsModified">
            <summary>Sets the shim of IgnoreSection.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.PropertiesGet">
            <summary>Sets the shim of IgnoreSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.ResetConfigurationElement">
            <summary>Sets the shim of IgnoreSection.Reset(ConfigurationElement parentSection)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.ResetModified">
            <summary>Sets the shim of IgnoreSection.ResetModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIgnoreSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the shim of IgnoreSection.SerializeSection(ConfigurationElement parentSection, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimInfiniteIntConverter">
            <summary>Shim type of System.Configuration.InfiniteIntConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteIntConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteIntConverter.#ctor(System.Configuration.InfiniteIntConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimInfiniteIntConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteIntConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteIntConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of InfiniteIntConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteIntConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteIntConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteIntConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteIntConverter.Constructor">
            <summary>Sets the shim of InfiniteIntConverter.InfiniteIntConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteIntConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteIntConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of InfiniteIntConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter">
            <summary>Shim type of System.Configuration.InfiniteTimeSpanConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.#ctor(System.Configuration.InfiniteTimeSpanConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of InfiniteTimeSpanConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of InfiniteTimeSpanConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.Constructor">
            <summary>Sets the shim of InfiniteTimeSpanConverter.InfiniteTimeSpanConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of InfiniteTimeSpanConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of InfiniteTimeSpanConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimInfiniteTimeSpanConverter.StaticConstructor">
            <summary>Sets the shim of InfiniteTimeSpanConverter.InfiniteTimeSpanConverter()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimIntegerValidator">
            <summary>Shim type of System.Configuration.IntegerValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidator.#ctor(System.Configuration.IntegerValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimIntegerValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of IntegerValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of IntegerValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.CanValidateType">
            <summary>Sets the shim of IntegerValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.ConstructorInt32Int32">
            <summary>Sets the shim of IntegerValidator.IntegerValidator(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.ConstructorInt32Int32Boolean">
            <summary>Sets the shim of IntegerValidator.IntegerValidator(Int32 minValue, Int32 maxValue, Boolean rangeIsExclusive)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.ConstructorInt32Int32BooleanInt32">
            <summary>Sets the shim of IntegerValidator.IntegerValidator(Int32 minValue, Int32 maxValue, Boolean rangeIsExclusive, Int32 resolution)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidator.ValidateObject">
            <summary>Sets the shim of IntegerValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimIntegerValidatorAttribute">
            <summary>Shim type of System.Configuration.IntegerValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidatorAttribute.#ctor(System.Configuration.IntegerValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances.ExcludeRangeGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_ExcludeRange()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances.ExcludeRangeSetBoolean">
            <summary>Sets the shim of IntegerValidatorAttribute.set_ExcludeRange(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances.MaxValueGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_MaxValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances.MaxValueSetInt32">
            <summary>Sets the shim of IntegerValidatorAttribute.set_MaxValue(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances.MinValueGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_MinValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances.MinValueSetInt32">
            <summary>Sets the shim of IntegerValidatorAttribute.set_MinValue(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimIntegerValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.Constructor">
            <summary>Sets the shim of IntegerValidatorAttribute.IntegerValidatorAttribute()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.ExcludeRangeGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_ExcludeRange()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.ExcludeRangeSetBoolean">
            <summary>Sets the shim of IntegerValidatorAttribute.set_ExcludeRange(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.MaxValueGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_MaxValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.MaxValueSetInt32">
            <summary>Sets the shim of IntegerValidatorAttribute.set_MaxValue(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.MinValueGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_MinValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.MinValueSetInt32">
            <summary>Sets the shim of IntegerValidatorAttribute.set_MinValue(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimIntegerValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of IntegerValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimKeyValueConfigurationCollection">
            <summary>Shim type of System.Configuration.KeyValueConfigurationCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.#ctor(System.Configuration.KeyValueConfigurationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AddKeyValueConfigurationElement">
            <summary>Sets the shim of KeyValueConfigurationCollection.Add(KeyValueConfigurationElement keyValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AddStringString">
            <summary>Sets the shim of KeyValueConfigurationCollection.Add(String key, String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.AddKeyValueConfigurationElement">
            <summary>Sets the shim of KeyValueConfigurationCollection.Add(KeyValueConfigurationElement keyValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.AddStringString">
            <summary>Sets the shim of KeyValueConfigurationCollection.Add(String key, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.AllKeysGet">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_AllKeys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.Clear">
            <summary>Sets the shim of KeyValueConfigurationCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of KeyValueConfigurationCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of KeyValueConfigurationCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_Item(String key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.PropertiesGet">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.RemoveString">
            <summary>Sets the shim of KeyValueConfigurationCollection.Remove(String key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllInstances.ThrowOnDuplicateGet">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.AllKeysGet">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_AllKeys()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.Clear">
            <summary>Sets the shim of KeyValueConfigurationCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.Constructor">
            <summary>Sets the shim of KeyValueConfigurationCollection.KeyValueConfigurationCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.CreateNewElement">
            <summary>Sets the shim of KeyValueConfigurationCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of KeyValueConfigurationCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.ItemGetString">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_Item(String key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.PropertiesGet">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.RemoveString">
            <summary>Sets the shim of KeyValueConfigurationCollection.Remove(String key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.StaticConstructor">
            <summary>Sets the shim of KeyValueConfigurationCollection.KeyValueConfigurationCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationCollection.ThrowOnDuplicateGet">
            <summary>Sets the shim of KeyValueConfigurationCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimKeyValueConfigurationElement">
            <summary>Shim type of System.Configuration.KeyValueConfigurationElement</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationElement.#ctor(System.Configuration.KeyValueConfigurationElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimKeyValueConfigurationElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.AllInstances.Init">
            <summary>Sets the shim of KeyValueConfigurationElement.Init()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.AllInstances.KeyGet">
            <summary>Sets the shim of KeyValueConfigurationElement.get_Key()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of KeyValueConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.AllInstances.ValueGet">
            <summary>Sets the shim of KeyValueConfigurationElement.get_Value()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.AllInstances.ValueSetString">
            <summary>Sets the shim of KeyValueConfigurationElement.set_Value(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimKeyValueConfigurationElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.Constructor">
            <summary>Sets the shim of KeyValueConfigurationElement.KeyValueConfigurationElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.ConstructorStringString">
            <summary>Sets the shim of KeyValueConfigurationElement.KeyValueConfigurationElement(String key, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.Init">
            <summary>Sets the shim of KeyValueConfigurationElement.Init()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.KeyGet">
            <summary>Sets the shim of KeyValueConfigurationElement.get_Key()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.PropertiesGet">
            <summary>Sets the shim of KeyValueConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.StaticConstructor">
            <summary>Sets the shim of KeyValueConfigurationElement.KeyValueConfigurationElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.ValueGet">
            <summary>Sets the shim of KeyValueConfigurationElement.get_Value()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimKeyValueConfigurationElement.ValueSetString">
            <summary>Sets the shim of KeyValueConfigurationElement.set_Value(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimLongValidator">
            <summary>Shim type of System.Configuration.LongValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidator.#ctor(System.Configuration.LongValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimLongValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of LongValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of LongValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.CanValidateType">
            <summary>Sets the shim of LongValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.ConstructorInt64Int64">
            <summary>Sets the shim of LongValidator.LongValidator(Int64 minValue, Int64 maxValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.ConstructorInt64Int64Boolean">
            <summary>Sets the shim of LongValidator.LongValidator(Int64 minValue, Int64 maxValue, Boolean rangeIsExclusive)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.ConstructorInt64Int64BooleanInt64">
            <summary>Sets the shim of LongValidator.LongValidator(Int64 minValue, Int64 maxValue, Boolean rangeIsExclusive, Int64 resolution)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidator.ValidateObject">
            <summary>Sets the shim of LongValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimLongValidatorAttribute">
            <summary>Shim type of System.Configuration.LongValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidatorAttribute.#ctor(System.Configuration.LongValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances.ExcludeRangeGet">
            <summary>Sets the shim of LongValidatorAttribute.get_ExcludeRange()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances.ExcludeRangeSetBoolean">
            <summary>Sets the shim of LongValidatorAttribute.set_ExcludeRange(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances.MaxValueGet">
            <summary>Sets the shim of LongValidatorAttribute.get_MaxValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances.MaxValueSetInt64">
            <summary>Sets the shim of LongValidatorAttribute.set_MaxValue(Int64 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances.MinValueGet">
            <summary>Sets the shim of LongValidatorAttribute.get_MinValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances.MinValueSetInt64">
            <summary>Sets the shim of LongValidatorAttribute.set_MinValue(Int64 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of LongValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimLongValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.Constructor">
            <summary>Sets the shim of LongValidatorAttribute.LongValidatorAttribute()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.ExcludeRangeGet">
            <summary>Sets the shim of LongValidatorAttribute.get_ExcludeRange()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.ExcludeRangeSetBoolean">
            <summary>Sets the shim of LongValidatorAttribute.set_ExcludeRange(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.MaxValueGet">
            <summary>Sets the shim of LongValidatorAttribute.get_MaxValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.MaxValueSetInt64">
            <summary>Sets the shim of LongValidatorAttribute.set_MaxValue(Int64 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.MinValueGet">
            <summary>Sets the shim of LongValidatorAttribute.get_MinValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.MinValueSetInt64">
            <summary>Sets the shim of LongValidatorAttribute.set_MinValue(Int64 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimLongValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of LongValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimNameValueConfigurationCollection">
            <summary>Shim type of System.Configuration.NameValueConfigurationCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationCollection.#ctor(System.Configuration.NameValueConfigurationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AddNameValueConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.Add(NameValueConfigurationElement nameValue)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.AddNameValueConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.Add(NameValueConfigurationElement nameValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.AllKeysGet">
            <summary>Sets the shim of NameValueConfigurationCollection.get_AllKeys()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.Clear">
            <summary>Sets the shim of NameValueConfigurationCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of NameValueConfigurationCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of NameValueConfigurationCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.ItemSetStringNameValueConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.set_Item(String name, NameValueConfigurationElement value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.PropertiesGet">
            <summary>Sets the shim of NameValueConfigurationCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.RemoveNameValueConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.Remove(NameValueConfigurationElement nameValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllInstances.RemoveString">
            <summary>Sets the shim of NameValueConfigurationCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.AllKeysGet">
            <summary>Sets the shim of NameValueConfigurationCollection.get_AllKeys()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.Clear">
            <summary>Sets the shim of NameValueConfigurationCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.Constructor">
            <summary>Sets the shim of NameValueConfigurationCollection.NameValueConfigurationCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.CreateNewElement">
            <summary>Sets the shim of NameValueConfigurationCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.ItemGetString">
            <summary>Sets the shim of NameValueConfigurationCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.ItemSetStringNameValueConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.set_Item(String name, NameValueConfigurationElement value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.PropertiesGet">
            <summary>Sets the shim of NameValueConfigurationCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.RemoveNameValueConfigurationElement">
            <summary>Sets the shim of NameValueConfigurationCollection.Remove(NameValueConfigurationElement nameValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.RemoveString">
            <summary>Sets the shim of NameValueConfigurationCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationCollection.StaticConstructor">
            <summary>Sets the shim of NameValueConfigurationCollection.NameValueConfigurationCollection()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimNameValueConfigurationElement">
            <summary>Shim type of System.Configuration.NameValueConfigurationElement</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationElement.#ctor(System.Configuration.NameValueConfigurationElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimNameValueConfigurationElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.AllInstances.NameGet">
            <summary>Sets the shim of NameValueConfigurationElement.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NameValueConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.AllInstances.ValueGet">
            <summary>Sets the shim of NameValueConfigurationElement.get_Value()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.AllInstances.ValueSetString">
            <summary>Sets the shim of NameValueConfigurationElement.set_Value(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimNameValueConfigurationElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.Constructor">
            <summary>Sets the shim of NameValueConfigurationElement.NameValueConfigurationElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.ConstructorStringString">
            <summary>Sets the shim of NameValueConfigurationElement.NameValueConfigurationElement(String name, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.NameGet">
            <summary>Sets the shim of NameValueConfigurationElement.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.PropertiesGet">
            <summary>Sets the shim of NameValueConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.StaticConstructor">
            <summary>Sets the shim of NameValueConfigurationElement.NameValueConfigurationElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.ValueGet">
            <summary>Sets the shim of NameValueConfigurationElement.get_Value()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimNameValueConfigurationElement.ValueSetString">
            <summary>Sets the shim of NameValueConfigurationElement.set_Value(String value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPositiveTimeSpanValidator">
            <summary>Shim type of System.Configuration.PositiveTimeSpanValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.#ctor(System.Configuration.PositiveTimeSpanValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of PositiveTimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of PositiveTimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.CanValidateType">
            <summary>Sets the shim of PositiveTimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.Constructor">
            <summary>Sets the shim of PositiveTimeSpanValidator.PositiveTimeSpanValidator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidator.ValidateObject">
            <summary>Sets the shim of PositiveTimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute">
            <summary>Shim type of System.Configuration.PositiveTimeSpanValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.#ctor(System.Configuration.PositiveTimeSpanValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of PositiveTimeSpanValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.Constructor">
            <summary>Sets the shim of PositiveTimeSpanValidatorAttribute.PositiveTimeSpanValidatorAttribute()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPositiveTimeSpanValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of PositiveTimeSpanValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPropertyInformation">
            <summary>Shim type of System.Configuration.PropertyInformation</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformation.#ctor(System.Configuration.PropertyInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPropertyInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.Constructor">
            <summary>Sets the shim of PropertyInformation.PropertyInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.ConverterGet">
            <summary>Sets the shim of PropertyInformation.get_Converter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.DefaultValueGet">
            <summary>Sets the shim of PropertyInformation.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.DescriptionGet">
            <summary>Sets the shim of PropertyInformation.get_Description()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.IsKeyGet">
            <summary>Sets the shim of PropertyInformation.get_IsKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.IsLockedGet">
            <summary>Sets the shim of PropertyInformation.get_IsLocked()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.IsModifiedGet">
            <summary>Sets the shim of PropertyInformation.get_IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.IsRequiredGet">
            <summary>Sets the shim of PropertyInformation.get_IsRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.LineNumberGet">
            <summary>Sets the shim of PropertyInformation.get_LineNumber()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.NameGet">
            <summary>Sets the shim of PropertyInformation.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.SourceGet">
            <summary>Sets the shim of PropertyInformation.get_Source()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.TypeGet">
            <summary>Sets the shim of PropertyInformation.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.ValidatorGet">
            <summary>Sets the shim of PropertyInformation.get_Validator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.ValueGet">
            <summary>Sets the shim of PropertyInformation.get_Value()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.ValueOriginGet">
            <summary>Sets the shim of PropertyInformation.get_ValueOrigin()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.AllInstances.ValueSetObject">
            <summary>Sets the shim of PropertyInformation.set_Value(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.Constructor">
            <summary>Sets the shim of PropertyInformation.PropertyInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.ConverterGet">
            <summary>Sets the shim of PropertyInformation.get_Converter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.DefaultValueGet">
            <summary>Sets the shim of PropertyInformation.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.DescriptionGet">
            <summary>Sets the shim of PropertyInformation.get_Description()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.IsKeyGet">
            <summary>Sets the shim of PropertyInformation.get_IsKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.IsLockedGet">
            <summary>Sets the shim of PropertyInformation.get_IsLocked()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.IsModifiedGet">
            <summary>Sets the shim of PropertyInformation.get_IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.IsRequiredGet">
            <summary>Sets the shim of PropertyInformation.get_IsRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.LineNumberGet">
            <summary>Sets the shim of PropertyInformation.get_LineNumber()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.NameGet">
            <summary>Sets the shim of PropertyInformation.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.SourceGet">
            <summary>Sets the shim of PropertyInformation.get_Source()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.TypeGet">
            <summary>Sets the shim of PropertyInformation.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.ValidatorGet">
            <summary>Sets the shim of PropertyInformation.get_Validator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.ValueGet">
            <summary>Sets the shim of PropertyInformation.get_Value()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.ValueOriginGet">
            <summary>Sets the shim of PropertyInformation.get_ValueOrigin()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformation.ValueSetObject">
            <summary>Sets the shim of PropertyInformation.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPropertyInformationCollection">
            <summary>Shim type of System.Configuration.PropertyInformationCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.#ctor(System.Configuration.PropertyInformationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimPropertyInformationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.AllInstances.Constructor">
            <summary>Sets the shim of PropertyInformationCollection.PropertyInformationCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.AllInstances.CopyToPropertyInformationArrayInt32">
            <summary>Sets the shim of PropertyInformationCollection.CopyTo(PropertyInformation[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of PropertyInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of PropertyInformationCollection.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of PropertyInformationCollection.get_Item(String propertyName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimPropertyInformationCollection.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.Constructor">
            <summary>Sets the shim of PropertyInformationCollection.PropertyInformationCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.CopyToPropertyInformationArrayInt32">
            <summary>Sets the shim of PropertyInformationCollection.CopyTo(PropertyInformation[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.GetEnumerator">
            <summary>Sets the shim of PropertyInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of PropertyInformationCollection.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimPropertyInformationCollection.ItemGetString">
            <summary>Sets the shim of PropertyInformationCollection.get_Item(String propertyName)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedConfiguration">
            <summary>Shim type of System.Configuration.ProtectedConfiguration</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfiguration.DefaultProviderGet">
            <summary>Sets the shim of ProtectedConfiguration.get_DefaultProvider()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfiguration.ProvidersGet">
            <summary>Sets the shim of ProtectedConfiguration.get_Providers()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedConfigurationProvider">
            <summary>Shim type of System.Configuration.ProtectedConfigurationProvider</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProvider.#ctor(System.Configuration.ProtectedConfigurationProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedConfigurationProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProvider.Constructor">
            <summary>Sets the shim of ProtectedConfigurationProvider.ProtectedConfigurationProvider()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection">
            <summary>Shim type of System.Configuration.ProtectedConfigurationProviderCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.#ctor(System.Configuration.ProtectedConfigurationProviderCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.AddProviderBase">
            <summary>Sets the shim of ProtectedConfigurationProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.AllInstances.AddProviderBase">
            <summary>Sets the shim of ProtectedConfigurationProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ProtectedConfigurationProviderCollection.get_Item(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.Constructor">
            <summary>Sets the shim of ProtectedConfigurationProviderCollection.ProtectedConfigurationProviderCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationProviderCollection.ItemGetString">
            <summary>Sets the shim of ProtectedConfigurationProviderCollection.get_Item(String name)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedConfigurationSection">
            <summary>Shim type of System.Configuration.ProtectedConfigurationSection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationSection.#ctor(System.Configuration.ProtectedConfigurationSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedConfigurationSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.AllInstances.DefaultProviderGet">
            <summary>Sets the shim of ProtectedConfigurationSection.get_DefaultProvider()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.AllInstances.DefaultProviderSetString">
            <summary>Sets the shim of ProtectedConfigurationSection.set_DefaultProvider(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.AllInstances.PropertiesGet">
            <summary>Sets the shim of ProtectedConfigurationSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.AllInstances.ProvidersGet">
            <summary>Sets the shim of ProtectedConfigurationSection.get_Providers()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedConfigurationSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.Constructor">
            <summary>Sets the shim of ProtectedConfigurationSection.ProtectedConfigurationSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.DefaultProviderGet">
            <summary>Sets the shim of ProtectedConfigurationSection.get_DefaultProvider()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.DefaultProviderSetString">
            <summary>Sets the shim of ProtectedConfigurationSection.set_DefaultProvider(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.PropertiesGet">
            <summary>Sets the shim of ProtectedConfigurationSection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.ProvidersGet">
            <summary>Sets the shim of ProtectedConfigurationSection.get_Providers()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedConfigurationSection.StaticConstructor">
            <summary>Sets the shim of ProtectedConfigurationSection.ProtectedConfigurationSection()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedProviderSettings">
            <summary>Shim type of System.Configuration.ProtectedProviderSettings</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedProviderSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedProviderSettings.#ctor(System.Configuration.ProtectedProviderSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProtectedProviderSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedProviderSettings.AllInstances.PropertiesGet">
            <summary>Sets the shim of ProtectedProviderSettings.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedProviderSettings.AllInstances.ProvidersGet">
            <summary>Sets the shim of ProtectedProviderSettings.get_Providers()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedProviderSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProtectedProviderSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedProviderSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedProviderSettings.Constructor">
            <summary>Sets the shim of ProtectedProviderSettings.ProtectedProviderSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedProviderSettings.PropertiesGet">
            <summary>Sets the shim of ProtectedProviderSettings.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProtectedProviderSettings.ProvidersGet">
            <summary>Sets the shim of ProtectedProviderSettings.get_Providers()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProviderSettings">
            <summary>Shim type of System.Configuration.ProviderSettings</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettings.#ctor(System.Configuration.ProviderSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProviderSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.IsModified">
            <summary>Sets the shim of ProviderSettings.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.NameGet">
            <summary>Sets the shim of ProviderSettings.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.NameSetString">
            <summary>Sets the shim of ProviderSettings.set_Name(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of ProviderSettings.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.ParametersGet">
            <summary>Sets the shim of ProviderSettings.get_Parameters()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.PropertiesGet">
            <summary>Sets the shim of ProviderSettings.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.ResetConfigurationElement">
            <summary>Sets the shim of ProviderSettings.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.TypeGet">
            <summary>Sets the shim of ProviderSettings.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.TypeSetString">
            <summary>Sets the shim of ProviderSettings.set_Type(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.AllInstances.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the shim of ProviderSettings.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.Constructor">
            <summary>Sets the shim of ProviderSettings.ProviderSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.ConstructorStringString">
            <summary>Sets the shim of ProviderSettings.ProviderSettings(String name, String type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.IsModified">
            <summary>Sets the shim of ProviderSettings.IsModified()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.NameGet">
            <summary>Sets the shim of ProviderSettings.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.NameSetString">
            <summary>Sets the shim of ProviderSettings.set_Name(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of ProviderSettings.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.ParametersGet">
            <summary>Sets the shim of ProviderSettings.get_Parameters()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.PropertiesGet">
            <summary>Sets the shim of ProviderSettings.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.ResetConfigurationElement">
            <summary>Sets the shim of ProviderSettings.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.TypeGet">
            <summary>Sets the shim of ProviderSettings.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.TypeSetString">
            <summary>Sets the shim of ProviderSettings.set_Type(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettings.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the shim of ProviderSettings.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProviderSettingsCollection">
            <summary>Shim type of System.Configuration.ProviderSettingsCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettingsCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettingsCollection.#ctor(System.Configuration.ProviderSettingsCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AddProviderSettings">
            <summary>Sets the shim of ProviderSettingsCollection.Add(ProviderSettings provider)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.AddProviderSettings">
            <summary>Sets the shim of ProviderSettingsCollection.Add(ProviderSettings provider)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.Clear">
            <summary>Sets the shim of ProviderSettingsCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of ProviderSettingsCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of ProviderSettingsCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ProviderSettingsCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ProviderSettingsCollection.get_Item(String key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.ItemSetInt32ProviderSettings">
            <summary>Sets the shim of ProviderSettingsCollection.set_Item(Int32 index, ProviderSettings value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.PropertiesGet">
            <summary>Sets the shim of ProviderSettingsCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ProviderSettingsCollection.Remove(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettingsCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettingsCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettingsCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimProviderSettingsCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.Clear">
            <summary>Sets the shim of ProviderSettingsCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.Constructor">
            <summary>Sets the shim of ProviderSettingsCollection.ProviderSettingsCollection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.CreateNewElement">
            <summary>Sets the shim of ProviderSettingsCollection.CreateNewElement()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of ProviderSettingsCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.ItemGetInt32">
            <summary>Sets the shim of ProviderSettingsCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.ItemGetString">
            <summary>Sets the shim of ProviderSettingsCollection.get_Item(String key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.ItemSetInt32ProviderSettings">
            <summary>Sets the shim of ProviderSettingsCollection.set_Item(Int32 index, ProviderSettings value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.PropertiesGet">
            <summary>Sets the shim of ProviderSettingsCollection.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.RemoveString">
            <summary>Sets the shim of ProviderSettingsCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimProviderSettingsCollection.StaticConstructor">
            <summary>Sets the shim of ProviderSettingsCollection.ProviderSettingsCollection()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimRegexStringValidator">
            <summary>Shim type of System.Configuration.RegexStringValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidator.#ctor(System.Configuration.RegexStringValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimRegexStringValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of RegexStringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of RegexStringValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidator.CanValidateType">
            <summary>Sets the shim of RegexStringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidator.ConstructorString">
            <summary>Sets the shim of RegexStringValidator.RegexStringValidator(String regex)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidator.ValidateObject">
            <summary>Sets the shim of RegexStringValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimRegexStringValidatorAttribute">
            <summary>Shim type of System.Configuration.RegexStringValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.#ctor(System.Configuration.RegexStringValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.AllInstances.RegexGet">
            <summary>Sets the shim of RegexStringValidatorAttribute.get_Regex()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of RegexStringValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.ConstructorString">
            <summary>Sets the shim of RegexStringValidatorAttribute.RegexStringValidatorAttribute(String regex)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.RegexGet">
            <summary>Sets the shim of RegexStringValidatorAttribute.get_Regex()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRegexStringValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of RegexStringValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider">
            <summary>Shim type of System.Configuration.RsaProtectedConfigurationProvider</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.#ctor(System.Configuration.RsaProtectedConfigurationProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AddKeyInt32Boolean">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.AddKey(Int32 keySize, Boolean exportable)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.AddKeyInt32Boolean">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.AddKey(Int32 keySize, Boolean exportable)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.CspProviderNameGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_CspProviderName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.DecryptXmlNode">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.Decrypt(XmlNode encryptedNode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.DeleteKey">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.DeleteKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.EncryptXmlNode">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.Encrypt(XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.ExportKeyStringBoolean">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.ExportKey(String xmlFileName, Boolean includePrivateParameters)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.ImportKeyStringBoolean">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.ImportKey(String xmlFileName, Boolean exportable)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.InitializeStringNameValueCollection">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.Initialize(String name, NameValueCollection configurationValues)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.KeyContainerNameGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_KeyContainerName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.RsaPublicKeyGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_RsaPublicKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.UseMachineContainerGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_UseMachineContainer()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.AllInstances.UseOAEPGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_UseOAEP()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.Constructor">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.CspProviderNameGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_CspProviderName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.DecryptXmlNode">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.Decrypt(XmlNode encryptedNode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.DeleteKey">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.DeleteKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.EncryptXmlNode">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.Encrypt(XmlNode node)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.ExportKeyStringBoolean">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.ExportKey(String xmlFileName, Boolean includePrivateParameters)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.ImportKeyStringBoolean">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.ImportKey(String xmlFileName, Boolean exportable)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.InitializeStringNameValueCollection">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.Initialize(String name, NameValueCollection configurationValues)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.KeyContainerNameGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_KeyContainerName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.RsaPublicKeyGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_RsaPublicKey()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.UseMachineContainerGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_UseMachineContainer()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimRsaProtectedConfigurationProvider.UseOAEPGet">
            <summary>Sets the shim of RsaProtectedConfigurationProvider.get_UseOAEP()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimSectionInformation">
            <summary>Shim type of System.Configuration.SectionInformation</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSectionInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSectionInformation.#ctor(System.Configuration.SectionInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimSectionInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowDefinitionGet">
            <summary>Sets the shim of SectionInformation.get_AllowDefinition()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowDefinitionSetConfigurationAllowDefinition">
            <summary>Sets the shim of SectionInformation.set_AllowDefinition(ConfigurationAllowDefinition value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowExeDefinitionGet">
            <summary>Sets the shim of SectionInformation.get_AllowExeDefinition()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowExeDefinitionSetConfigurationAllowExeDefinition">
            <summary>Sets the shim of SectionInformation.set_AllowExeDefinition(ConfigurationAllowExeDefinition value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowLocationGet">
            <summary>Sets the shim of SectionInformation.get_AllowLocation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowLocationSetBoolean">
            <summary>Sets the shim of SectionInformation.set_AllowLocation(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowOverrideGet">
            <summary>Sets the shim of SectionInformation.get_AllowOverride()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.AllowOverrideSetBoolean">
            <summary>Sets the shim of SectionInformation.set_AllowOverride(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ConfigSourceGet">
            <summary>Sets the shim of SectionInformation.get_ConfigSource()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ConfigSourceSetString">
            <summary>Sets the shim of SectionInformation.set_ConfigSource(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.Constructor">
            <summary>Sets the shim of SectionInformation.SectionInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ForceDeclaration">
            <summary>Sets the shim of SectionInformation.ForceDeclaration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ForceDeclarationBoolean">
            <summary>Sets the shim of SectionInformation.ForceDeclaration(Boolean force)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ForceSaveGet">
            <summary>Sets the shim of SectionInformation.get_ForceSave()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ForceSaveSetBoolean">
            <summary>Sets the shim of SectionInformation.set_ForceSave(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.GetParentSection">
            <summary>Sets the shim of SectionInformation.GetParentSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.GetRawXml">
            <summary>Sets the shim of SectionInformation.GetRawXml()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.InheritInChildApplicationsGet">
            <summary>Sets the shim of SectionInformation.get_InheritInChildApplications()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.InheritInChildApplicationsSetBoolean">
            <summary>Sets the shim of SectionInformation.set_InheritInChildApplications(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.IsDeclarationRequiredGet">
            <summary>Sets the shim of SectionInformation.get_IsDeclarationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.IsDeclaredGet">
            <summary>Sets the shim of SectionInformation.get_IsDeclared()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.IsLockedGet">
            <summary>Sets the shim of SectionInformation.get_IsLocked()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.IsProtectedGet">
            <summary>Sets the shim of SectionInformation.get_IsProtected()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.NameGet">
            <summary>Sets the shim of SectionInformation.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.OverrideModeDefaultGet">
            <summary>Sets the shim of SectionInformation.get_OverrideModeDefault()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.OverrideModeDefaultSetOverrideMode">
            <summary>Sets the shim of SectionInformation.set_OverrideModeDefault(OverrideMode value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.OverrideModeEffectiveGet">
            <summary>Sets the shim of SectionInformation.get_OverrideModeEffective()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.OverrideModeGet">
            <summary>Sets the shim of SectionInformation.get_OverrideMode()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.OverrideModeSetOverrideMode">
            <summary>Sets the shim of SectionInformation.set_OverrideMode(OverrideMode value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ProtectSectionString">
            <summary>Sets the shim of SectionInformation.ProtectSection(String protectionProvider)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.ProtectionProviderGet">
            <summary>Sets the shim of SectionInformation.get_ProtectionProvider()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.RequirePermissionGet">
            <summary>Sets the shim of SectionInformation.get_RequirePermission()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.RequirePermissionSetBoolean">
            <summary>Sets the shim of SectionInformation.set_RequirePermission(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.RestartOnExternalChangesGet">
            <summary>Sets the shim of SectionInformation.get_RestartOnExternalChanges()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.RestartOnExternalChangesSetBoolean">
            <summary>Sets the shim of SectionInformation.set_RestartOnExternalChanges(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.RevertToParent">
            <summary>Sets the shim of SectionInformation.RevertToParent()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.SectionNameGet">
            <summary>Sets the shim of SectionInformation.get_SectionName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.SetRawXmlString">
            <summary>Sets the shim of SectionInformation.SetRawXml(String rawXml)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.TypeGet">
            <summary>Sets the shim of SectionInformation.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.TypeSetString">
            <summary>Sets the shim of SectionInformation.set_Type(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllInstances.UnprotectSection">
            <summary>Sets the shim of SectionInformation.UnprotectSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowDefinitionGet">
            <summary>Sets the shim of SectionInformation.get_AllowDefinition()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowDefinitionSetConfigurationAllowDefinition">
            <summary>Sets the shim of SectionInformation.set_AllowDefinition(ConfigurationAllowDefinition value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowExeDefinitionGet">
            <summary>Sets the shim of SectionInformation.get_AllowExeDefinition()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowExeDefinitionSetConfigurationAllowExeDefinition">
            <summary>Sets the shim of SectionInformation.set_AllowExeDefinition(ConfigurationAllowExeDefinition value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowLocationGet">
            <summary>Sets the shim of SectionInformation.get_AllowLocation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowLocationSetBoolean">
            <summary>Sets the shim of SectionInformation.set_AllowLocation(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowOverrideGet">
            <summary>Sets the shim of SectionInformation.get_AllowOverride()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.AllowOverrideSetBoolean">
            <summary>Sets the shim of SectionInformation.set_AllowOverride(Boolean value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSectionInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSectionInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ConfigSourceGet">
            <summary>Sets the shim of SectionInformation.get_ConfigSource()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ConfigSourceSetString">
            <summary>Sets the shim of SectionInformation.set_ConfigSource(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.Constructor">
            <summary>Sets the shim of SectionInformation.SectionInformation()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ForceDeclaration">
            <summary>Sets the shim of SectionInformation.ForceDeclaration()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ForceDeclarationBoolean">
            <summary>Sets the shim of SectionInformation.ForceDeclaration(Boolean force)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ForceSaveGet">
            <summary>Sets the shim of SectionInformation.get_ForceSave()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ForceSaveSetBoolean">
            <summary>Sets the shim of SectionInformation.set_ForceSave(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.GetParentSection">
            <summary>Sets the shim of SectionInformation.GetParentSection()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.GetRawXml">
            <summary>Sets the shim of SectionInformation.GetRawXml()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.InheritInChildApplicationsGet">
            <summary>Sets the shim of SectionInformation.get_InheritInChildApplications()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.InheritInChildApplicationsSetBoolean">
            <summary>Sets the shim of SectionInformation.set_InheritInChildApplications(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.IsDeclarationRequiredGet">
            <summary>Sets the shim of SectionInformation.get_IsDeclarationRequired()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.IsDeclaredGet">
            <summary>Sets the shim of SectionInformation.get_IsDeclared()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.IsLockedGet">
            <summary>Sets the shim of SectionInformation.get_IsLocked()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.IsProtectedGet">
            <summary>Sets the shim of SectionInformation.get_IsProtected()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.NameGet">
            <summary>Sets the shim of SectionInformation.get_Name()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.OverrideModeDefaultGet">
            <summary>Sets the shim of SectionInformation.get_OverrideModeDefault()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.OverrideModeDefaultSetOverrideMode">
            <summary>Sets the shim of SectionInformation.set_OverrideModeDefault(OverrideMode value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.OverrideModeEffectiveGet">
            <summary>Sets the shim of SectionInformation.get_OverrideModeEffective()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.OverrideModeGet">
            <summary>Sets the shim of SectionInformation.get_OverrideMode()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.OverrideModeSetOverrideMode">
            <summary>Sets the shim of SectionInformation.set_OverrideMode(OverrideMode value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ProtectSectionString">
            <summary>Sets the shim of SectionInformation.ProtectSection(String protectionProvider)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.ProtectionProviderGet">
            <summary>Sets the shim of SectionInformation.get_ProtectionProvider()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.RequirePermissionGet">
            <summary>Sets the shim of SectionInformation.get_RequirePermission()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.RequirePermissionSetBoolean">
            <summary>Sets the shim of SectionInformation.set_RequirePermission(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.RestartOnExternalChangesGet">
            <summary>Sets the shim of SectionInformation.get_RestartOnExternalChanges()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.RestartOnExternalChangesSetBoolean">
            <summary>Sets the shim of SectionInformation.set_RestartOnExternalChanges(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.RevertToParent">
            <summary>Sets the shim of SectionInformation.RevertToParent()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.SectionNameGet">
            <summary>Sets the shim of SectionInformation.get_SectionName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.SetRawXmlString">
            <summary>Sets the shim of SectionInformation.SetRawXml(String rawXml)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.TypeGet">
            <summary>Sets the shim of SectionInformation.get_Type()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.TypeSetString">
            <summary>Sets the shim of SectionInformation.set_Type(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSectionInformation.UnprotectSection">
            <summary>Sets the shim of SectionInformation.UnprotectSection()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimStringValidator">
            <summary>Shim type of System.Configuration.StringValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidator.#ctor(System.Configuration.StringValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimStringValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of StringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of StringValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.CanValidateType">
            <summary>Sets the shim of StringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.ConstructorInt32">
            <summary>Sets the shim of StringValidator.StringValidator(Int32 minLength)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.ConstructorInt32Int32">
            <summary>Sets the shim of StringValidator.StringValidator(Int32 minLength, Int32 maxLength)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.ConstructorInt32Int32String">
            <summary>Sets the shim of StringValidator.StringValidator(Int32 minLength, Int32 maxLength, String invalidCharacters)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidator.ValidateObject">
            <summary>Sets the shim of StringValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimStringValidatorAttribute">
            <summary>Shim type of System.Configuration.StringValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidatorAttribute.#ctor(System.Configuration.StringValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances.InvalidCharactersGet">
            <summary>Sets the shim of StringValidatorAttribute.get_InvalidCharacters()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances.InvalidCharactersSetString">
            <summary>Sets the shim of StringValidatorAttribute.set_InvalidCharacters(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances.MaxLengthGet">
            <summary>Sets the shim of StringValidatorAttribute.get_MaxLength()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances.MaxLengthSetInt32">
            <summary>Sets the shim of StringValidatorAttribute.set_MaxLength(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances.MinLengthGet">
            <summary>Sets the shim of StringValidatorAttribute.get_MinLength()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances.MinLengthSetInt32">
            <summary>Sets the shim of StringValidatorAttribute.set_MinLength(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of StringValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimStringValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.Constructor">
            <summary>Sets the shim of StringValidatorAttribute.StringValidatorAttribute()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.InvalidCharactersGet">
            <summary>Sets the shim of StringValidatorAttribute.get_InvalidCharacters()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.InvalidCharactersSetString">
            <summary>Sets the shim of StringValidatorAttribute.set_InvalidCharacters(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.MaxLengthGet">
            <summary>Sets the shim of StringValidatorAttribute.get_MaxLength()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.MaxLengthSetInt32">
            <summary>Sets the shim of StringValidatorAttribute.set_MaxLength(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.MinLengthGet">
            <summary>Sets the shim of StringValidatorAttribute.get_MinLength()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.MinLengthSetInt32">
            <summary>Sets the shim of StringValidatorAttribute.set_MinLength(Int32 value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimStringValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of StringValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimSubclassTypeValidator">
            <summary>Shim type of System.Configuration.SubclassTypeValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidator.#ctor(System.Configuration.SubclassTypeValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimSubclassTypeValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of SubclassTypeValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of SubclassTypeValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidator.CanValidateType">
            <summary>Sets the shim of SubclassTypeValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidator.ConstructorType">
            <summary>Sets the shim of SubclassTypeValidator.SubclassTypeValidator(Type baseClass)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidator.ValidateObject">
            <summary>Sets the shim of SubclassTypeValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute">
            <summary>Shim type of System.Configuration.SubclassTypeValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.#ctor(System.Configuration.SubclassTypeValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.AllInstances.BaseClassGet">
            <summary>Sets the shim of SubclassTypeValidatorAttribute.get_BaseClass()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of SubclassTypeValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.BaseClassGet">
            <summary>Sets the shim of SubclassTypeValidatorAttribute.get_BaseClass()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.ConstructorType">
            <summary>Sets the shim of SubclassTypeValidatorAttribute.SubclassTypeValidatorAttribute(Type baseClass)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimSubclassTypeValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of SubclassTypeValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanMinutesConverter">
            <summary>Shim type of System.Configuration.TimeSpanMinutesConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.#ctor(System.Configuration.TimeSpanMinutesConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanMinutesConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanMinutesConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.Constructor">
            <summary>Sets the shim of TimeSpanMinutesConverter.TimeSpanMinutesConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanMinutesConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanMinutesConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter">
            <summary>Shim type of System.Configuration.TimeSpanMinutesOrInfiniteConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.#ctor(System.Configuration.TimeSpanMinutesOrInfiniteConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanMinutesOrInfiniteConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanMinutesOrInfiniteConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.Constructor">
            <summary>Sets the shim of TimeSpanMinutesOrInfiniteConverter.TimeSpanMinutesOrInfiniteConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanMinutesOrInfiniteConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanMinutesOrInfiniteConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanMinutesOrInfiniteConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanSecondsConverter">
            <summary>Shim type of System.Configuration.TimeSpanSecondsConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.#ctor(System.Configuration.TimeSpanSecondsConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanSecondsConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanSecondsConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.Constructor">
            <summary>Sets the shim of TimeSpanSecondsConverter.TimeSpanSecondsConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanSecondsConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanSecondsConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter">
            <summary>Shim type of System.Configuration.TimeSpanSecondsOrInfiniteConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.#ctor(System.Configuration.TimeSpanSecondsOrInfiniteConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanSecondsOrInfiniteConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanSecondsOrInfiniteConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.Constructor">
            <summary>Sets the shim of TimeSpanSecondsOrInfiniteConverter.TimeSpanSecondsOrInfiniteConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TimeSpanSecondsOrInfiniteConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanSecondsOrInfiniteConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TimeSpanSecondsOrInfiniteConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanValidator">
            <summary>Shim type of System.Configuration.TimeSpanValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidator.#ctor(System.Configuration.TimeSpanValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.AllInstances.CanValidateType">
            <summary>Sets the shim of TimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.AllInstances.ValidateObject">
            <summary>Sets the shim of TimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.CanValidateType">
            <summary>Sets the shim of TimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.ConstructorTimeSpanTimeSpan">
            <summary>Sets the shim of TimeSpanValidator.TimeSpanValidator(TimeSpan minValue, TimeSpan maxValue)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.ConstructorTimeSpanTimeSpanBoolean">
            <summary>Sets the shim of TimeSpanValidator.TimeSpanValidator(TimeSpan minValue, TimeSpan maxValue, Boolean rangeIsExclusive)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.ConstructorTimeSpanTimeSpanBooleanInt64">
            <summary>Sets the shim of TimeSpanValidator.TimeSpanValidator(TimeSpan minValue, TimeSpan maxValue, Boolean rangeIsExclusive, Int64 resolutionInSeconds)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidator.ValidateObject">
            <summary>Sets the shim of TimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute">
            <summary>Shim type of System.Configuration.TimeSpanValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.#ctor(System.Configuration.TimeSpanValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.ExcludeRangeGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_ExcludeRange()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.ExcludeRangeSetBoolean">
            <summary>Sets the shim of TimeSpanValidatorAttribute.set_ExcludeRange(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.MaxValueGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MaxValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.MaxValueStringGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MaxValueString()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.MaxValueStringSetString">
            <summary>Sets the shim of TimeSpanValidatorAttribute.set_MaxValueString(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.MinValueGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MinValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.MinValueStringGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MinValueString()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.MinValueStringSetString">
            <summary>Sets the shim of TimeSpanValidatorAttribute.set_MinValueString(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.AllInstances.ValidatorInstanceGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.Constructor">
            <summary>Sets the shim of TimeSpanValidatorAttribute.TimeSpanValidatorAttribute()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.ExcludeRangeGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_ExcludeRange()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.ExcludeRangeSetBoolean">
            <summary>Sets the shim of TimeSpanValidatorAttribute.set_ExcludeRange(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.MaxValueGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MaxValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.MaxValueStringGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MaxValueString()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.MaxValueStringSetString">
            <summary>Sets the shim of TimeSpanValidatorAttribute.set_MaxValueString(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.MinValueGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MinValue()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.MinValueStringGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_MinValueString()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.MinValueStringSetString">
            <summary>Sets the shim of TimeSpanValidatorAttribute.set_MinValueString(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTimeSpanValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the shim of TimeSpanValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTypeNameConverter">
            <summary>Shim type of System.Configuration.TypeNameConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTypeNameConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTypeNameConverter.#ctor(System.Configuration.TypeNameConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimTypeNameConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTypeNameConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TypeNameConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTypeNameConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TypeNameConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTypeNameConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimTypeNameConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTypeNameConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTypeNameConverter.Constructor">
            <summary>Sets the shim of TypeNameConverter.TypeNameConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTypeNameConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of TypeNameConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimTypeNameConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of TypeNameConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter">
            <summary>Shim type of System.Configuration.WhiteSpaceTrimStringConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.#ctor(System.Configuration.WhiteSpaceTrimStringConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of WhiteSpaceTrimStringConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of WhiteSpaceTrimStringConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.Constructor">
            <summary>Sets the shim of WhiteSpaceTrimStringConverter.WhiteSpaceTrimStringConverter()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the shim of WhiteSpaceTrimStringConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimWhiteSpaceTrimStringConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the shim of WhiteSpaceTrimStringConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationConverterBase">
            <summary>Stub type of System.Configuration.ConfigurationConverterBase</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationConverterBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.CanConvertFromITypeDescriptorContextType">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.CanConvertToITypeDescriptorContextType">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Sets the stub of TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the stub of TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Sets the stub of TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the stub of TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Sets the stub of TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Sets the stub of TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Sets the stub of TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Sets the stub of TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.GetStandardValuesITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationConverterBase</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationConverterBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationConverterBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationConverterBase.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Sets the stub of TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationConverterBase.IsValidITypeDescriptorContextObject">
            <summary>Sets the stub of TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationElement">
            <summary>Stub type of System.Configuration.ConfigurationElement</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationElement</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElement.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationElementCollection">
            <summary>Stub type of System.Configuration.ConfigurationElementCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.#ctor(System.Collections.IComparer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.CollectionType">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.CollectionTypeGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.CreateNewElement">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.CreateNewElement01">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.ElementName">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.ElementNameGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.GetElementKeyConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationElementCollection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.IsElementName(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.IsElementNameString">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationElementCollection.ThrowOnDuplicate">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.ThrowOnDuplicateGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationElementCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationErrorsException">
            <summary>Stub type of System.Configuration.ConfigurationErrorsException</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubConfigurationErrorsException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubConfigurationErrorsException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.BareMessage">
            <summary>Sets the stub of ConfigurationErrorsException.get_BareMessage()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.BareMessageGet">
            <summary>Sets the stub of ConfigurationErrorsException.get_BareMessage()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.Filename">
            <summary>Sets the stub of ConfigurationErrorsException.get_Filename()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.FilenameGet">
            <summary>Sets the stub of ConfigurationErrorsException.get_Filename()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ConfigurationErrorsException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ConfigurationErrorsException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationErrorsException</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.Line">
            <summary>Sets the stub of ConfigurationErrorsException.get_Line()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.LineGet">
            <summary>Sets the stub of ConfigurationErrorsException.get_Line()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.Message">
            <summary>Sets the stub of ConfigurationErrorsException.get_Message()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.MessageGet">
            <summary>Sets the stub of ConfigurationErrorsException.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationErrorsException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationErrorsException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationErrorsException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationFileMap">
            <summary>Stub type of System.Configuration.ConfigurationFileMap</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationFileMap.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationFileMap.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationFileMap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationFileMap.Clone">
            <summary>Sets the stub of ConfigurationFileMap.Clone()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationFileMap.Clone01">
            <summary>Sets the stub of ConfigurationFileMap.Clone()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationFileMap.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationFileMap</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationFileMap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationFileMap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationPropertyCollection">
            <summary>Stub type of System.Configuration.ConfigurationPropertyCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationPropertyCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationPropertyCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationPropertyCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationPropertyCollection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationPropertyCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationPropertyCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationSection">
            <summary>Stub type of System.Configuration.ConfigurationSection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.DeserializeSectionXmlReader">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.GetRuntimeObject">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.GetRuntimeObject01">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationSection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.IsModified">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.IsModified01">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSection.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.ResetModified">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.ResetModified01">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationSectionGroup">
            <summary>Stub type of System.Configuration.ConfigurationSectionGroup</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSectionGroup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSectionGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSectionGroup.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationSectionGroup</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSectionGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationSectionGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationValidatorAttribute">
            <summary>Stub type of System.Configuration.ConfigurationValidatorAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationValidatorAttribute</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorAttribute.ValidatorInstance">
            <summary>Sets the stub of ConfigurationValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorAttribute.ValidatorInstanceGet">
            <summary>Sets the stub of ConfigurationValidatorAttribute.get_ValidatorInstance()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationValidatorBase">
            <summary>Stub type of System.Configuration.ConfigurationValidatorBase</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorBase.CanValidate(System.Type)">
            <summary>Sets the stub of ConfigurationValidatorBase.CanValidate(Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorBase.CanValidateType">
            <summary>Sets the stub of ConfigurationValidatorBase.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorBase.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationValidatorBase</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationValidatorBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationValidatorBase.Validate(System.Object)">
            <summary>Sets the stub of ConfigurationValidatorBase.Validate(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationValidatorBase.ValidateObject">
            <summary>Sets the stub of ConfigurationValidatorBase.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubIntegerValidator">
            <summary>Stub type of System.Configuration.IntegerValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIntegerValidator.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIntegerValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIntegerValidator.CanValidate(System.Type)">
            <summary>Sets the stub of IntegerValidator.CanValidate(Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIntegerValidator.CanValidateType">
            <summary>Sets the stub of IntegerValidator.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIntegerValidator.InitializeStub">
            <summary>Initializes a new instance of type StubIntegerValidator</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIntegerValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIntegerValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIntegerValidator.Validate(System.Object)">
            <summary>Sets the stub of IntegerValidator.Validate(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIntegerValidator.ValidateObject">
            <summary>Sets the stub of IntegerValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubKeyValueConfigurationCollection">
            <summary>Stub type of System.Configuration.KeyValueConfigurationCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.CollectionType">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.CollectionTypeGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.CreateNewElement">
            <summary>Sets the stub of KeyValueConfigurationCollection.CreateNewElement()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.CreateNewElement01">
            <summary>Sets the stub of KeyValueConfigurationCollection.CreateNewElement()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ElementName">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ElementNameGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of KeyValueConfigurationCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetElementKeyConfigurationElement">
            <summary>Sets the stub of KeyValueConfigurationCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.InitializeStub">
            <summary>Initializes a new instance of type StubKeyValueConfigurationCollection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsElementName(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsElementNameString">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.Properties">
            <summary>Sets the stub of KeyValueConfigurationCollection.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.PropertiesGet">
            <summary>Sets the stub of KeyValueConfigurationCollection.get_Properties()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ThrowOnDuplicate">
            <summary>Sets the stub of KeyValueConfigurationCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.ThrowOnDuplicateGet">
            <summary>Sets the stub of KeyValueConfigurationCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubKeyValueConfigurationElement">
            <summary>Stub type of System.Configuration.KeyValueConfigurationElement</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.Init">
            <summary>Sets the stub of KeyValueConfigurationElement.Init()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.Init01">
            <summary>Sets the stub of KeyValueConfigurationElement.Init()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.InitializeStub">
            <summary>Initializes a new instance of type StubKeyValueConfigurationElement</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubKeyValueConfigurationElement.Properties">
            <summary>Sets the stub of KeyValueConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.PropertiesGet">
            <summary>Sets the stub of KeyValueConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubKeyValueConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubKeyValueConfigurationElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubLongValidator">
            <summary>Stub type of System.Configuration.LongValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLongValidator.#ctor(System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLongValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLongValidator.CanValidate(System.Type)">
            <summary>Sets the stub of LongValidator.CanValidate(Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLongValidator.CanValidateType">
            <summary>Sets the stub of LongValidator.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLongValidator.InitializeStub">
            <summary>Initializes a new instance of type StubLongValidator</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLongValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLongValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLongValidator.Validate(System.Object)">
            <summary>Sets the stub of LongValidator.Validate(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLongValidator.ValidateObject">
            <summary>Sets the stub of LongValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubPositiveTimeSpanValidator">
            <summary>Stub type of System.Configuration.PositiveTimeSpanValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubPositiveTimeSpanValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubPositiveTimeSpanValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubPositiveTimeSpanValidator.CanValidate(System.Type)">
            <summary>Sets the stub of PositiveTimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubPositiveTimeSpanValidator.CanValidateType">
            <summary>Sets the stub of PositiveTimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubPositiveTimeSpanValidator.InitializeStub">
            <summary>Initializes a new instance of type StubPositiveTimeSpanValidator</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubPositiveTimeSpanValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubPositiveTimeSpanValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubPositiveTimeSpanValidator.Validate(System.Object)">
            <summary>Sets the stub of PositiveTimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubPositiveTimeSpanValidator.ValidateObject">
            <summary>Sets the stub of PositiveTimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubProtectedConfigurationProvider">
            <summary>Stub type of System.Configuration.ProtectedConfigurationProvider</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
            <summary>Sets the stub of ProtectedConfigurationProvider.Decrypt(XmlNode encryptedNode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedConfigurationProvider.DecryptXmlNode">
            <summary>Sets the stub of ProtectedConfigurationProvider.Decrypt(XmlNode encryptedNode)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProvider.Description">
            <summary>Sets the stub of ProviderBase.get_Description()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedConfigurationProvider.DescriptionGet">
            <summary>Sets the stub of ProviderBase.get_Description()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
            <summary>Sets the stub of ProtectedConfigurationProvider.Encrypt(XmlNode node)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedConfigurationProvider.EncryptXmlNode">
            <summary>Sets the stub of ProtectedConfigurationProvider.Encrypt(XmlNode node)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Sets the stub of ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedConfigurationProvider.InitializeStringNameValueCollection">
            <summary>Sets the stub of ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProvider.InitializeStub">
            <summary>Initializes a new instance of type StubProtectedConfigurationProvider</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProvider.Name">
            <summary>Sets the stub of ProviderBase.get_Name()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedConfigurationProvider.NameGet">
            <summary>Sets the stub of ProviderBase.get_Name()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection">
            <summary>Stub type of System.Configuration.ProtectedConfigurationProviderCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>Sets the stub of ProtectedConfigurationProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection.AddProviderBase">
            <summary>Sets the stub of ProtectedConfigurationProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection.InitializeStub">
            <summary>Initializes a new instance of type StubProtectedConfigurationProviderCollection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedConfigurationProviderCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubProtectedProviderSettings">
            <summary>Stub type of System.Configuration.ProtectedProviderSettings</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedProviderSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedProviderSettings.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.InitializeStub">
            <summary>Initializes a new instance of type StubProtectedProviderSettings</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedProviderSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedProviderSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubProtectedProviderSettings.Properties">
            <summary>Sets the stub of ProtectedProviderSettings.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.PropertiesGet">
            <summary>Sets the stub of ProtectedProviderSettings.get_Properties()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubProtectedProviderSettings.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubProtectedProviderSettings.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubRegexStringValidator">
            <summary>Stub type of System.Configuration.RegexStringValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubRegexStringValidator.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubRegexStringValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubRegexStringValidator.CanValidate(System.Type)">
            <summary>Sets the stub of RegexStringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubRegexStringValidator.CanValidateType">
            <summary>Sets the stub of RegexStringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubRegexStringValidator.InitializeStub">
            <summary>Initializes a new instance of type StubRegexStringValidator</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubRegexStringValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubRegexStringValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubRegexStringValidator.Validate(System.Object)">
            <summary>Sets the stub of RegexStringValidator.Validate(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubRegexStringValidator.ValidateObject">
            <summary>Sets the stub of RegexStringValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubStringValidator">
            <summary>Stub type of System.Configuration.StringValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubStringValidator.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubStringValidator.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubStringValidator.#ctor(System.Int32,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubStringValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubStringValidator.CanValidate(System.Type)">
            <summary>Sets the stub of StringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubStringValidator.CanValidateType">
            <summary>Sets the stub of StringValidator.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubStringValidator.InitializeStub">
            <summary>Initializes a new instance of type StubStringValidator</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubStringValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubStringValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubStringValidator.Validate(System.Object)">
            <summary>Sets the stub of StringValidator.Validate(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubStringValidator.ValidateObject">
            <summary>Sets the stub of StringValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubTimeSpanMinutesConverter">
            <summary>Stub type of System.Configuration.TimeSpanMinutesConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanMinutesConverter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.CanConvertToITypeDescriptorContextType">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Sets the stub of TimeSpanMinutesConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the stub of TimeSpanMinutesConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Sets the stub of TimeSpanMinutesConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the stub of TimeSpanMinutesConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Sets the stub of TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Sets the stub of TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Sets the stub of TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Sets the stub of TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.InitializeStub">
            <summary>Initializes a new instance of type StubTimeSpanMinutesConverter</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanMinutesConverter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanMinutesConverter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanMinutesConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Sets the stub of TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanMinutesConverter.IsValidITypeDescriptorContextObject">
            <summary>Sets the stub of TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubTimeSpanSecondsConverter">
            <summary>Stub type of System.Configuration.TimeSpanSecondsConverter</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanSecondsConverter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.CanConvertToITypeDescriptorContextType">
            <summary>Sets the stub of ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext ctx, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Sets the stub of TimeSpanSecondsConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Sets the stub of TimeSpanSecondsConverter.ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, Object data)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Sets the stub of TimeSpanSecondsConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Sets the stub of TimeSpanSecondsConverter.ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, Object value, Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Sets the stub of TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Sets the stub of TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Sets the stub of TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Sets the stub of TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Sets the stub of TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.InitializeStub">
            <summary>Initializes a new instance of type StubTimeSpanSecondsConverter</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanSecondsConverter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanSecondsConverter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanSecondsConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Sets the stub of TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanSecondsConverter.IsValidITypeDescriptorContextObject">
            <summary>Sets the stub of TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubTimeSpanValidator">
            <summary>Stub type of System.Configuration.TimeSpanValidator</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanValidator.CanValidate(System.Type)">
            <summary>Sets the stub of TimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanValidator.CanValidateType">
            <summary>Sets the stub of TimeSpanValidator.CanValidate(Type type)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanValidator.InitializeStub">
            <summary>Initializes a new instance of type StubTimeSpanValidator</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubTimeSpanValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubTimeSpanValidator.Validate(System.Object)">
            <summary>Sets the stub of TimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubTimeSpanValidator.ValidateObject">
            <summary>Sets the stub of TimeSpanValidator.Validate(Object value)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost">
            <summary>Shim type of System.Configuration.Internal.DelegatingConfigHost</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.#ctor(System.Configuration.Internal.DelegatingConfigHost)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.CreateConfigurationContextStringString">
            <summary>Sets the shim of DelegatingConfigHost.CreateConfigurationContext(String configPath, String locationSubPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.CreateDeprecatedConfigContextString">
            <summary>Sets the shim of DelegatingConfigHost.CreateDeprecatedConfigContext(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.DecryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the shim of DelegatingConfigHost.DecryptSection(String encryptedXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.DeleteStreamString">
            <summary>Sets the shim of DelegatingConfigHost.DeleteStream(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.EncryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the shim of DelegatingConfigHost.EncryptSection(String clearTextXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.GetConfigPathFromLocationSubPathStringString">
            <summary>Sets the shim of DelegatingConfigHost.GetConfigPathFromLocationSubPath(String configPath, String locationSubPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.GetConfigTypeNameType">
            <summary>Sets the shim of DelegatingConfigHost.GetConfigTypeName(Type t)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.GetConfigTypeStringBoolean">
            <summary>Sets the shim of DelegatingConfigHost.GetConfigType(String typeName, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.GetRestrictedPermissionsIInternalConfigRecordPermissionSetOutBooleanOut">
            <summary>Sets the shim of DelegatingConfigHost.GetRestrictedPermissions(IInternalConfigRecord configRecord, PermissionSet&amp; permissionSet, Boolean&amp; isHostReady)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.GetStreamNameForConfigSourceStringString">
            <summary>Sets the shim of DelegatingConfigHost.GetStreamNameForConfigSource(String streamName, String configSource)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.GetStreamNameString">
            <summary>Sets the shim of DelegatingConfigHost.GetStreamName(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.GetStreamVersionString">
            <summary>Sets the shim of DelegatingConfigHost.GetStreamVersion(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.HostGet">
            <summary>Sets the shim of DelegatingConfigHost.get_Host()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.HostSetIInternalConfigHost">
            <summary>Sets the shim of DelegatingConfigHost.set_Host(IInternalConfigHost value)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.Impersonate">
            <summary>Sets the shim of DelegatingConfigHost.Impersonate()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.InitForConfigurationStringRefStringOutStringOutIInternalConfigRootObjectArray">
            <summary>Sets the shim of DelegatingConfigHost.InitForConfiguration(String&amp; locationSubPath, String&amp; configPath, String&amp; locationConfigPath, IInternalConfigRoot configRoot, Object[] hostInitConfigurationParams)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.InitIInternalConfigRootObjectArray">
            <summary>Sets the shim of DelegatingConfigHost.Init(IInternalConfigRoot configRoot, Object[] hostInitParams)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsAboveApplicationString">
            <summary>Sets the shim of DelegatingConfigHost.IsAboveApplication(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsConfigRecordRequiredString">
            <summary>Sets the shim of DelegatingConfigHost.IsConfigRecordRequired(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinition">
            <summary>Sets the shim of DelegatingConfigHost.IsDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsFileString">
            <summary>Sets the shim of DelegatingConfigHost.IsFile(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsFullTrustSectionWithoutAptcaAllowedIInternalConfigRecord">
            <summary>Sets the shim of DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsInitDelayedIInternalConfigRecord">
            <summary>Sets the shim of DelegatingConfigHost.IsInitDelayed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsLocationApplicableString">
            <summary>Sets the shim of DelegatingConfigHost.IsLocationApplicable(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsRemoteGet">
            <summary>Sets the shim of DelegatingConfigHost.get_IsRemote()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsSecondaryRootString">
            <summary>Sets the shim of DelegatingConfigHost.IsSecondaryRoot(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.IsTrustedConfigPathString">
            <summary>Sets the shim of DelegatingConfigHost.IsTrustedConfigPath(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.OpenStreamForReadString">
            <summary>Sets the shim of DelegatingConfigHost.OpenStreamForRead(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.OpenStreamForReadStringBoolean">
            <summary>Sets the shim of DelegatingConfigHost.OpenStreamForRead(String streamName, Boolean assertPermissions)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.OpenStreamForWriteStringStringObjectRef">
            <summary>Sets the shim of DelegatingConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.OpenStreamForWriteStringStringObjectRefBoolean">
            <summary>Sets the shim of DelegatingConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.PrefetchAllStringString">
            <summary>Sets the shim of DelegatingConfigHost.PrefetchAll(String configPath, String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.PrefetchSectionStringString">
            <summary>Sets the shim of DelegatingConfigHost.PrefetchSection(String sectionGroupName, String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.RequireCompleteInitIInternalConfigRecord">
            <summary>Sets the shim of DelegatingConfigHost.RequireCompleteInit(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.StartMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the shim of DelegatingConfigHost.StartMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.StopMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the shim of DelegatingConfigHost.StopMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.SupportsChangeNotificationsGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsChangeNotifications()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.SupportsLocationGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsLocation()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.SupportsPathGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.SupportsRefreshGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsRefresh()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.VerifyDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinitionIConfigErrorInfo">
            <summary>Sets the shim of DelegatingConfigHost.VerifyDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.WriteCompletedStringBooleanObject">
            <summary>Sets the shim of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.AllInstances.WriteCompletedStringBooleanObjectBoolean">
            <summary>Sets the shim of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.Bind(System.Configuration.Internal.IInternalConfigHost)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.Constructor">
            <summary>Sets the shim of DelegatingConfigHost.DelegatingConfigHost()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.CreateConfigurationContextStringString">
            <summary>Sets the shim of DelegatingConfigHost.CreateConfigurationContext(String configPath, String locationSubPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.CreateDeprecatedConfigContextString">
            <summary>Sets the shim of DelegatingConfigHost.CreateDeprecatedConfigContext(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.DecryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the shim of DelegatingConfigHost.DecryptSection(String encryptedXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.DeleteStreamString">
            <summary>Sets the shim of DelegatingConfigHost.DeleteStream(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.EncryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the shim of DelegatingConfigHost.EncryptSection(String clearTextXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.GetConfigPathFromLocationSubPathStringString">
            <summary>Sets the shim of DelegatingConfigHost.GetConfigPathFromLocationSubPath(String configPath, String locationSubPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.GetConfigTypeNameType">
            <summary>Sets the shim of DelegatingConfigHost.GetConfigTypeName(Type t)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.GetConfigTypeStringBoolean">
            <summary>Sets the shim of DelegatingConfigHost.GetConfigType(String typeName, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.GetRestrictedPermissionsIInternalConfigRecordPermissionSetOutBooleanOut">
            <summary>Sets the shim of DelegatingConfigHost.GetRestrictedPermissions(IInternalConfigRecord configRecord, PermissionSet&amp; permissionSet, Boolean&amp; isHostReady)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.GetStreamNameForConfigSourceStringString">
            <summary>Sets the shim of DelegatingConfigHost.GetStreamNameForConfigSource(String streamName, String configSource)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.GetStreamNameString">
            <summary>Sets the shim of DelegatingConfigHost.GetStreamName(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.GetStreamVersionString">
            <summary>Sets the shim of DelegatingConfigHost.GetStreamVersion(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.HostGet">
            <summary>Sets the shim of DelegatingConfigHost.get_Host()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.HostSetIInternalConfigHost">
            <summary>Sets the shim of DelegatingConfigHost.set_Host(IInternalConfigHost value)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.Impersonate">
            <summary>Sets the shim of DelegatingConfigHost.Impersonate()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.InitIInternalConfigRootObjectArray">
            <summary>Sets the shim of DelegatingConfigHost.Init(IInternalConfigRoot configRoot, Object[] hostInitParams)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsAboveApplicationString">
            <summary>Sets the shim of DelegatingConfigHost.IsAboveApplication(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsConfigRecordRequiredString">
            <summary>Sets the shim of DelegatingConfigHost.IsConfigRecordRequired(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinition">
            <summary>Sets the shim of DelegatingConfigHost.IsDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsFileString">
            <summary>Sets the shim of DelegatingConfigHost.IsFile(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowedIInternalConfigRecord">
            <summary>Sets the shim of DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsInitDelayedIInternalConfigRecord">
            <summary>Sets the shim of DelegatingConfigHost.IsInitDelayed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsLocationApplicableString">
            <summary>Sets the shim of DelegatingConfigHost.IsLocationApplicable(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsRemoteGet">
            <summary>Sets the shim of DelegatingConfigHost.get_IsRemote()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsSecondaryRootString">
            <summary>Sets the shim of DelegatingConfigHost.IsSecondaryRoot(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.IsTrustedConfigPathString">
            <summary>Sets the shim of DelegatingConfigHost.IsTrustedConfigPath(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.OpenStreamForReadString">
            <summary>Sets the shim of DelegatingConfigHost.OpenStreamForRead(String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.OpenStreamForReadStringBoolean">
            <summary>Sets the shim of DelegatingConfigHost.OpenStreamForRead(String streamName, Boolean assertPermissions)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.OpenStreamForWriteStringStringObjectRef">
            <summary>Sets the shim of DelegatingConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.PrefetchAllStringString">
            <summary>Sets the shim of DelegatingConfigHost.PrefetchAll(String configPath, String streamName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.PrefetchSectionStringString">
            <summary>Sets the shim of DelegatingConfigHost.PrefetchSection(String sectionGroupName, String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.RequireCompleteInitIInternalConfigRecord">
            <summary>Sets the shim of DelegatingConfigHost.RequireCompleteInit(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.StartMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the shim of DelegatingConfigHost.StartMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.StopMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the shim of DelegatingConfigHost.StopMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.SupportsChangeNotificationsGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsChangeNotifications()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.SupportsLocationGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsLocation()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.SupportsPathGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.SupportsRefreshGet">
            <summary>Sets the shim of DelegatingConfigHost.get_SupportsRefresh()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.VerifyDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinitionIConfigErrorInfo">
            <summary>Sets the shim of DelegatingConfigHost.VerifyDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.WriteCompletedStringBooleanObject">
            <summary>Sets the shim of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimDelegatingConfigHost.WriteCompletedStringBooleanObjectBoolean">
            <summary>Sets the shim of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs">
            <summary>Shim type of System.Configuration.Internal.InternalConfigEventArgs</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.#ctor(System.Configuration.Internal.InternalConfigEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.AllInstances.ConfigPathGet">
            <summary>Sets the shim of InternalConfigEventArgs.get_ConfigPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.AllInstances.ConfigPathSetString">
            <summary>Sets the shim of InternalConfigEventArgs.set_ConfigPath(String value)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.ConfigPathGet">
            <summary>Sets the shim of InternalConfigEventArgs.get_ConfigPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.ConfigPathSetString">
            <summary>Sets the shim of InternalConfigEventArgs.set_ConfigPath(String value)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.ShimInternalConfigEventArgs.ConstructorString">
            <summary>Sets the shim of InternalConfigEventArgs.InternalConfigEventArgs(String configPath)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubDelegatingConfigHost">
            <summary>Stub type of System.Configuration.Internal.DelegatingConfigHost</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
            <summary>Sets the stub of DelegatingConfigHost.CreateConfigurationContext(String configPath, String locationSubPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.CreateConfigurationContextStringString">
            <summary>Sets the stub of DelegatingConfigHost.CreateConfigurationContext(String configPath, String locationSubPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.CreateDeprecatedConfigContext(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.CreateDeprecatedConfigContextString">
            <summary>Sets the stub of DelegatingConfigHost.CreateDeprecatedConfigContext(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Sets the stub of DelegatingConfigHost.DecryptSection(String encryptedXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.DecryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the stub of DelegatingConfigHost.DecryptSection(String encryptedXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.DeleteStream(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.DeleteStream(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.DeleteStreamString">
            <summary>Sets the stub of DelegatingConfigHost.DeleteStream(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Sets the stub of DelegatingConfigHost.EncryptSection(String clearTextXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.EncryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the stub of DelegatingConfigHost.EncryptSection(String clearTextXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
            <summary>Sets the stub of DelegatingConfigHost.GetConfigPathFromLocationSubPath(String configPath, String locationSubPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetConfigPathFromLocationSubPathStringString">
            <summary>Sets the stub of DelegatingConfigHost.GetConfigPathFromLocationSubPath(String configPath, String locationSubPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
            <summary>Sets the stub of DelegatingConfigHost.GetConfigType(String typeName, Boolean throwOnError)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetConfigTypeName(System.Type)">
            <summary>Sets the stub of DelegatingConfigHost.GetConfigTypeName(Type t)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetConfigTypeNameType">
            <summary>Sets the stub of DelegatingConfigHost.GetConfigTypeName(Type t)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetConfigTypeStringBoolean">
            <summary>Sets the stub of DelegatingConfigHost.GetConfigType(String typeName, Boolean throwOnError)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
            <summary>Sets the stub of DelegatingConfigHost.GetRestrictedPermissions(IInternalConfigRecord configRecord, PermissionSet&amp; permissionSet, Boolean&amp; isHostReady)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetRestrictedPermissionsIInternalConfigRecordPermissionSetOutBooleanOut">
            <summary>Sets the stub of DelegatingConfigHost.GetRestrictedPermissions(IInternalConfigRecord configRecord, PermissionSet&amp; permissionSet, Boolean&amp; isHostReady)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetStreamName(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.GetStreamName(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
            <summary>Sets the stub of DelegatingConfigHost.GetStreamNameForConfigSource(String streamName, String configSource)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetStreamNameForConfigSourceStringString">
            <summary>Sets the stub of DelegatingConfigHost.GetStreamNameForConfigSource(String streamName, String configSource)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetStreamNameString">
            <summary>Sets the stub of DelegatingConfigHost.GetStreamName(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetStreamVersion(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.GetStreamVersion(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.GetStreamVersionString">
            <summary>Sets the stub of DelegatingConfigHost.GetStreamVersion(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.Impersonate">
            <summary>Sets the stub of DelegatingConfigHost.Impersonate()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.Impersonate01">
            <summary>Sets the stub of DelegatingConfigHost.Impersonate()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Sets the stub of DelegatingConfigHost.Init(IInternalConfigRoot configRoot, Object[] hostInitParams)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Sets the stub of DelegatingConfigHost.InitForConfiguration(String&amp; locationSubPath, String&amp; configPath, String&amp; locationConfigPath, IInternalConfigRoot configRoot, Object[] hostInitConfigurationParams)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.InitForConfigurationStringRefStringOutStringOutIInternalConfigRootObjectArray">
            <summary>Sets the stub of DelegatingConfigHost.InitForConfiguration(String&amp; locationSubPath, String&amp; configPath, String&amp; locationConfigPath, IInternalConfigRoot configRoot, Object[] hostInitConfigurationParams)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.InitIInternalConfigRootObjectArray">
            <summary>Sets the stub of DelegatingConfigHost.Init(IInternalConfigRoot configRoot, Object[] hostInitParams)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.InitializeStub">
            <summary>Initializes a new instance of type StubDelegatingConfigHost</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsAboveApplication(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.IsAboveApplication(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsAboveApplicationString">
            <summary>Sets the stub of DelegatingConfigHost.IsAboveApplication(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsConfigRecordRequired(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.IsConfigRecordRequired(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsConfigRecordRequiredString">
            <summary>Sets the stub of DelegatingConfigHost.IsConfigRecordRequired(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
            <summary>Sets the stub of DelegatingConfigHost.IsDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinition">
            <summary>Sets the stub of DelegatingConfigHost.IsDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsFile(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.IsFile(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsFileString">
            <summary>Sets the stub of DelegatingConfigHost.IsFile(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Sets the stub of DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowedIInternalConfigRecord">
            <summary>Sets the stub of DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Sets the stub of DelegatingConfigHost.IsInitDelayed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsInitDelayedIInternalConfigRecord">
            <summary>Sets the stub of DelegatingConfigHost.IsInitDelayed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsLocationApplicable(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.IsLocationApplicable(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsLocationApplicableString">
            <summary>Sets the stub of DelegatingConfigHost.IsLocationApplicable(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsRemote">
            <summary>Sets the stub of DelegatingConfigHost.get_IsRemote()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsRemoteGet">
            <summary>Sets the stub of DelegatingConfigHost.get_IsRemote()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsSecondaryRoot(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.IsSecondaryRoot(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsSecondaryRootString">
            <summary>Sets the stub of DelegatingConfigHost.IsSecondaryRoot(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsTrustedConfigPath(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.IsTrustedConfigPath(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.IsTrustedConfigPathString">
            <summary>Sets the stub of DelegatingConfigHost.IsTrustedConfigPath(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForRead(System.String)">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForRead(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForRead(String streamName, Boolean assertPermissions)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForReadString">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForRead(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForReadStringBoolean">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForRead(String streamName, Boolean assertPermissions)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForWriteStringStringObjectRef">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.OpenStreamForWriteStringStringObjectRefBoolean">
            <summary>Sets the stub of DelegatingConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.PrefetchAll(System.String,System.String)">
            <summary>Sets the stub of DelegatingConfigHost.PrefetchAll(String configPath, String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.PrefetchAllStringString">
            <summary>Sets the stub of DelegatingConfigHost.PrefetchAll(String configPath, String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.PrefetchSection(System.String,System.String)">
            <summary>Sets the stub of DelegatingConfigHost.PrefetchSection(String sectionGroupName, String sectionName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.PrefetchSectionStringString">
            <summary>Sets the stub of DelegatingConfigHost.PrefetchSection(String sectionGroupName, String sectionName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Sets the stub of DelegatingConfigHost.RequireCompleteInit(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.RequireCompleteInitIInternalConfigRecord">
            <summary>Sets the stub of DelegatingConfigHost.RequireCompleteInit(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Sets the stub of DelegatingConfigHost.StartMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.StartMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the stub of DelegatingConfigHost.StartMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Sets the stub of DelegatingConfigHost.StopMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.StopMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the stub of DelegatingConfigHost.StopMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsChangeNotifications">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsChangeNotifications()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsChangeNotificationsGet">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsChangeNotifications()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsLocation">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsLocation()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsLocationGet">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsLocation()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsPath">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsPathGet">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsRefresh">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsRefresh()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.SupportsRefreshGet">
            <summary>Sets the stub of DelegatingConfigHost.get_SupportsRefresh()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
            <summary>Sets the stub of DelegatingConfigHost.VerifyDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.VerifyDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinitionIConfigErrorInfo">
            <summary>Sets the stub of DelegatingConfigHost.VerifyDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
            <summary>Sets the stub of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
            <summary>Sets the stub of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.WriteCompletedStringBooleanObject">
            <summary>Sets the stub of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubDelegatingConfigHost.WriteCompletedStringBooleanObjectBoolean">
            <summary>Sets the stub of DelegatingConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIConfigErrorInfo">
            <summary>Stub type of System.Configuration.Internal.IConfigErrorInfo</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIConfigErrorInfo.#ctor">
            <summary>Initializes a new instance of type StubIConfigErrorInfo</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigErrorInfo.System#Configuration#Internal#IConfigErrorInfo#Filename">
            <summary>Sets the stub of IConfigErrorInfo.get_Filename()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigErrorInfo.FilenameGet">
            <summary>Sets the stub of IConfigErrorInfo.get_Filename()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigErrorInfo.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
            <summary>Sets the stub of IConfigErrorInfo.get_LineNumber()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigErrorInfo.LineNumberGet">
            <summary>Sets the stub of IConfigErrorInfo.get_LineNumber()</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIConfigSystem">
            <summary>Stub type of System.Configuration.Internal.IConfigSystem</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIConfigSystem.#ctor">
            <summary>Initializes a new instance of type StubIConfigSystem</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigSystem.System#Configuration#Internal#IConfigSystem#Host">
            <summary>Sets the stub of IConfigSystem.get_Host()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigSystem.HostGet">
            <summary>Sets the stub of IConfigSystem.get_Host()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigSystem.InitTypeObjectArray">
            <summary>Sets the stub of IConfigSystem.Init(Type typeConfigHost, Object[] hostInitParams)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigSystem.System#Configuration#Internal#IConfigSystem#Root">
            <summary>Sets the stub of IConfigSystem.get_Root()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigSystem.RootGet">
            <summary>Sets the stub of IConfigSystem.get_Root()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIConfigSystem.System#Configuration#Internal#IConfigSystem#Init(System.Type,System.Object[])">
            <summary>Sets the stub of IConfigSystem.Init(Type typeConfigHost, Object[] hostInitParams)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIConfigurationManagerHelper">
            <summary>Stub type of System.Configuration.Internal.IConfigurationManagerHelper</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIConfigurationManagerHelper.#ctor">
            <summary>Initializes a new instance of type StubIConfigurationManagerHelper</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerHelper.EnsureNetConfigLoaded">
            <summary>Sets the stub of IConfigurationManagerHelper.EnsureNetConfigLoaded()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIConfigurationManagerHelper.System#Configuration#Internal#IConfigurationManagerHelper#EnsureNetConfigLoaded">
            <summary>Sets the stub of IConfigurationManagerHelper.EnsureNetConfigLoaded()</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal">
            <summary>Stub type of System.Configuration.Internal.IConfigurationManagerInternal</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.#ctor">
            <summary>Initializes a new instance of type StubIConfigurationManagerInternal</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#ApplicationConfigUri">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ApplicationConfigUri()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.ApplicationConfigUriGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ApplicationConfigUri()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#ExeLocalConfigDirectory">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeLocalConfigDirectory()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.ExeLocalConfigDirectoryGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeLocalConfigDirectory()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#ExeLocalConfigPath">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeLocalConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.ExeLocalConfigPathGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeLocalConfigPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#ExeProductName">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeProductName()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.ExeProductNameGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeProductName()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#ExeProductVersion">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeProductVersion()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.ExeProductVersionGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeProductVersion()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#ExeRoamingConfigDirectory">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeRoamingConfigDirectory()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.ExeRoamingConfigDirectoryGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeRoamingConfigDirectory()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#ExeRoamingConfigPath">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeRoamingConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.ExeRoamingConfigPathGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_ExeRoamingConfigPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#MachineConfigPath">
            <summary>Sets the stub of IConfigurationManagerInternal.get_MachineConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.MachineConfigPathGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_MachineConfigPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#SetConfigurationSystemInProgress">
            <summary>Sets the stub of IConfigurationManagerInternal.get_SetConfigurationSystemInProgress()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.SetConfigurationSystemInProgressGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_SetConfigurationSystemInProgress()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#SupportsUserConfig">
            <summary>Sets the stub of IConfigurationManagerInternal.get_SupportsUserConfig()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.SupportsUserConfigGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_SupportsUserConfig()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.System#Configuration#Internal#IConfigurationManagerInternal#UserConfigFilename">
            <summary>Sets the stub of IConfigurationManagerInternal.get_UserConfigFilename()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIConfigurationManagerInternal.UserConfigFilenameGet">
            <summary>Sets the stub of IConfigurationManagerInternal.get_UserConfigFilename()</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost">
            <summary>Stub type of System.Configuration.Internal.IInternalConfigClientHost</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.#ctor">
            <summary>Initializes a new instance of type StubIInternalConfigClientHost</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.GetExeConfigPath">
            <summary>Sets the stub of IInternalConfigClientHost.GetExeConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.GetLocalUserConfigPath">
            <summary>Sets the stub of IInternalConfigClientHost.GetLocalUserConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.GetRoamingUserConfigPath">
            <summary>Sets the stub of IInternalConfigClientHost.GetRoamingUserConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.IsExeConfigString">
            <summary>Sets the stub of IInternalConfigClientHost.IsExeConfig(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.IsLocalUserConfigString">
            <summary>Sets the stub of IInternalConfigClientHost.IsLocalUserConfig(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.IsRoamingUserConfigString">
            <summary>Sets the stub of IInternalConfigClientHost.IsRoamingUserConfig(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.System#Configuration#Internal#IInternalConfigClientHost#GetExeConfigPath">
            <summary>Sets the stub of IInternalConfigClientHost.GetExeConfigPath()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.System#Configuration#Internal#IInternalConfigClientHost#GetLocalUserConfigPath">
            <summary>Sets the stub of IInternalConfigClientHost.GetLocalUserConfigPath()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.System#Configuration#Internal#IInternalConfigClientHost#GetRoamingUserConfigPath">
            <summary>Sets the stub of IInternalConfigClientHost.GetRoamingUserConfigPath()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.System#Configuration#Internal#IInternalConfigClientHost#IsExeConfig(System.String)">
            <summary>Sets the stub of IInternalConfigClientHost.IsExeConfig(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.System#Configuration#Internal#IInternalConfigClientHost#IsLocalUserConfig(System.String)">
            <summary>Sets the stub of IInternalConfigClientHost.IsLocalUserConfig(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigClientHost.System#Configuration#Internal#IInternalConfigClientHost#IsRoamingUserConfig(System.String)">
            <summary>Sets the stub of IInternalConfigClientHost.IsRoamingUserConfig(String configPath)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIInternalConfigConfigurationFactory">
            <summary>Stub type of System.Configuration.Internal.IInternalConfigConfigurationFactory</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigConfigurationFactory.#ctor">
            <summary>Initializes a new instance of type StubIInternalConfigConfigurationFactory</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigConfigurationFactory.CreateTypeObjectArray">
            <summary>Sets the stub of IInternalConfigConfigurationFactory.Create(Type typeConfigHost, Object[] hostInitConfigurationParams)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigConfigurationFactory.NormalizeLocationSubPathStringIConfigErrorInfo">
            <summary>Sets the stub of IInternalConfigConfigurationFactory.NormalizeLocationSubPath(String subPath, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigConfigurationFactory.System#Configuration#Internal#IInternalConfigConfigurationFactory#Create(System.Type,System.Object[])">
            <summary>Sets the stub of IInternalConfigConfigurationFactory.Create(Type typeConfigHost, Object[] hostInitConfigurationParams)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigConfigurationFactory.System#Configuration#Internal#IInternalConfigConfigurationFactory#NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
            <summary>Sets the stub of IInternalConfigConfigurationFactory.NormalizeLocationSubPath(String subPath, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIInternalConfigHost">
            <summary>Stub type of System.Configuration.Internal.IInternalConfigHost</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.#ctor">
            <summary>Initializes a new instance of type StubIInternalConfigHost</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.CreateConfigurationContextStringString">
            <summary>Sets the stub of IInternalConfigHost.CreateConfigurationContext(String configPath, String locationSubPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.CreateDeprecatedConfigContextString">
            <summary>Sets the stub of IInternalConfigHost.CreateDeprecatedConfigContext(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.DecryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the stub of IInternalConfigHost.DecryptSection(String encryptedXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.DeleteStreamString">
            <summary>Sets the stub of IInternalConfigHost.DeleteStream(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.EncryptSectionStringProtectedConfigurationProviderProtectedConfigurationSection">
            <summary>Sets the stub of IInternalConfigHost.EncryptSection(String clearTextXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.GetConfigPathFromLocationSubPathStringString">
            <summary>Sets the stub of IInternalConfigHost.GetConfigPathFromLocationSubPath(String configPath, String locationSubPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.GetConfigTypeNameType">
            <summary>Sets the stub of IInternalConfigHost.GetConfigTypeName(Type t)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.GetConfigTypeStringBoolean">
            <summary>Sets the stub of IInternalConfigHost.GetConfigType(String typeName, Boolean throwOnError)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.GetRestrictedPermissionsIInternalConfigRecordPermissionSetOutBooleanOut">
            <summary>Sets the stub of IInternalConfigHost.GetRestrictedPermissions(IInternalConfigRecord configRecord, PermissionSet&amp; permissionSet, Boolean&amp; isHostReady)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.GetStreamNameForConfigSourceStringString">
            <summary>Sets the stub of IInternalConfigHost.GetStreamNameForConfigSource(String streamName, String configSource)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.GetStreamNameString">
            <summary>Sets the stub of IInternalConfigHost.GetStreamName(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.GetStreamVersionString">
            <summary>Sets the stub of IInternalConfigHost.GetStreamVersion(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.Impersonate">
            <summary>Sets the stub of IInternalConfigHost.Impersonate()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.InitForConfigurationStringRefStringOutStringOutIInternalConfigRootObjectArray">
            <summary>Sets the stub of IInternalConfigHost.InitForConfiguration(String&amp; locationSubPath, String&amp; configPath, String&amp; locationConfigPath, IInternalConfigRoot configRoot, Object[] hostInitConfigurationParams)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.InitIInternalConfigRootObjectArray">
            <summary>Sets the stub of IInternalConfigHost.Init(IInternalConfigRoot configRoot, Object[] hostInitParams)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsAboveApplicationString">
            <summary>Sets the stub of IInternalConfigHost.IsAboveApplication(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsConfigRecordRequiredString">
            <summary>Sets the stub of IInternalConfigHost.IsConfigRecordRequired(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinition">
            <summary>Sets the stub of IInternalConfigHost.IsDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsFileString">
            <summary>Sets the stub of IInternalConfigHost.IsFile(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowedIInternalConfigRecord">
            <summary>Sets the stub of IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsInitDelayedIInternalConfigRecord">
            <summary>Sets the stub of IInternalConfigHost.IsInitDelayed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsLocationApplicableString">
            <summary>Sets the stub of IInternalConfigHost.IsLocationApplicable(String configPath)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsRemote">
            <summary>Sets the stub of IInternalConfigHost.get_IsRemote()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsRemoteGet">
            <summary>Sets the stub of IInternalConfigHost.get_IsRemote()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsSecondaryRootString">
            <summary>Sets the stub of IInternalConfigHost.IsSecondaryRoot(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.IsTrustedConfigPathString">
            <summary>Sets the stub of IInternalConfigHost.IsTrustedConfigPath(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.OpenStreamForReadString">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForRead(String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.OpenStreamForReadStringBoolean">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForRead(String streamName, Boolean assertPermissions)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.OpenStreamForWriteStringStringObjectRef">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.OpenStreamForWriteStringStringObjectRefBoolean">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.PrefetchAllStringString">
            <summary>Sets the stub of IInternalConfigHost.PrefetchAll(String configPath, String streamName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.PrefetchSectionStringString">
            <summary>Sets the stub of IInternalConfigHost.PrefetchSection(String sectionGroupName, String sectionName)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.RequireCompleteInitIInternalConfigRecord">
            <summary>Sets the stub of IInternalConfigHost.RequireCompleteInit(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.StartMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the stub of IInternalConfigHost.StartMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.StopMonitoringStreamForChangesStringStreamChangeCallback">
            <summary>Sets the stub of IInternalConfigHost.StopMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#SupportsChangeNotifications">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsChangeNotifications()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.SupportsChangeNotificationsGet">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsChangeNotifications()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#SupportsLocation">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsLocation()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.SupportsLocationGet">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsLocation()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#SupportsPath">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.SupportsPathGet">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsPath()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#SupportsRefresh">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsRefresh()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.SupportsRefreshGet">
            <summary>Sets the stub of IInternalConfigHost.get_SupportsRefresh()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#CreateConfigurationContext(System.String,System.String)">
            <summary>Sets the stub of IInternalConfigHost.CreateConfigurationContext(String configPath, String locationSubPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#CreateDeprecatedConfigContext(System.String)">
            <summary>Sets the stub of IInternalConfigHost.CreateDeprecatedConfigContext(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Sets the stub of IInternalConfigHost.DecryptSection(String encryptedXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#DeleteStream(System.String)">
            <summary>Sets the stub of IInternalConfigHost.DeleteStream(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Sets the stub of IInternalConfigHost.EncryptSection(String clearTextXml, ProtectedConfigurationProvider protectionProvider, ProtectedConfigurationSection protectedConfigSection)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#GetConfigPathFromLocationSubPath(System.String,System.String)">
            <summary>Sets the stub of IInternalConfigHost.GetConfigPathFromLocationSubPath(String configPath, String locationSubPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#GetConfigType(System.String,System.Boolean)">
            <summary>Sets the stub of IInternalConfigHost.GetConfigType(String typeName, Boolean throwOnError)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#GetConfigTypeName(System.Type)">
            <summary>Sets the stub of IInternalConfigHost.GetConfigTypeName(Type t)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
            <summary>Sets the stub of IInternalConfigHost.GetRestrictedPermissions(IInternalConfigRecord configRecord, PermissionSet&amp; permissionSet, Boolean&amp; isHostReady)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#GetStreamName(System.String)">
            <summary>Sets the stub of IInternalConfigHost.GetStreamName(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#GetStreamNameForConfigSource(System.String,System.String)">
            <summary>Sets the stub of IInternalConfigHost.GetStreamNameForConfigSource(String streamName, String configSource)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#GetStreamVersion(System.String)">
            <summary>Sets the stub of IInternalConfigHost.GetStreamVersion(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#Impersonate">
            <summary>Sets the stub of IInternalConfigHost.Impersonate()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Sets the stub of IInternalConfigHost.Init(IInternalConfigRoot configRoot, Object[] hostInitParams)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Sets the stub of IInternalConfigHost.InitForConfiguration(String&amp; locationSubPath, String&amp; configPath, String&amp; locationConfigPath, IInternalConfigRoot configRoot, Object[] hostInitConfigurationParams)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsAboveApplication(System.String)">
            <summary>Sets the stub of IInternalConfigHost.IsAboveApplication(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsConfigRecordRequired(System.String)">
            <summary>Sets the stub of IInternalConfigHost.IsConfigRecordRequired(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
            <summary>Sets the stub of IInternalConfigHost.IsDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsFile(System.String)">
            <summary>Sets the stub of IInternalConfigHost.IsFile(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Sets the stub of IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Sets the stub of IInternalConfigHost.IsInitDelayed(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsLocationApplicable(System.String)">
            <summary>Sets the stub of IInternalConfigHost.IsLocationApplicable(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsSecondaryRoot(System.String)">
            <summary>Sets the stub of IInternalConfigHost.IsSecondaryRoot(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#IsTrustedConfigPath(System.String)">
            <summary>Sets the stub of IInternalConfigHost.IsTrustedConfigPath(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#OpenStreamForRead(System.String)">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForRead(String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#OpenStreamForRead(System.String,System.Boolean)">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForRead(String streamName, Boolean assertPermissions)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#OpenStreamForWrite(System.String,System.String,System.Object@)">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
            <summary>Sets the stub of IInternalConfigHost.OpenStreamForWrite(String streamName, String templateStreamName, Object&amp; writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#PrefetchAll(System.String,System.String)">
            <summary>Sets the stub of IInternalConfigHost.PrefetchAll(String configPath, String streamName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#PrefetchSection(System.String,System.String)">
            <summary>Sets the stub of IInternalConfigHost.PrefetchSection(String sectionGroupName, String sectionName)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Sets the stub of IInternalConfigHost.RequireCompleteInit(IInternalConfigRecord configRecord)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Sets the stub of IInternalConfigHost.StartMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Sets the stub of IInternalConfigHost.StopMonitoringStreamForChanges(String streamName, StreamChangeCallback callback)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
            <summary>Sets the stub of IInternalConfigHost.VerifyDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#WriteCompleted(System.String,System.Boolean,System.Object)">
            <summary>Sets the stub of IInternalConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigHost.System#Configuration#Internal#IInternalConfigHost#WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
            <summary>Sets the stub of IInternalConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.VerifyDefinitionAllowedStringConfigurationAllowDefinitionConfigurationAllowExeDefinitionIConfigErrorInfo">
            <summary>Sets the stub of IInternalConfigHost.VerifyDefinitionAllowed(String configPath, ConfigurationAllowDefinition allowDefinition, ConfigurationAllowExeDefinition allowExeDefinition, IConfigErrorInfo errorInfo)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.WriteCompletedStringBooleanObject">
            <summary>Sets the stub of IInternalConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigHost.WriteCompletedStringBooleanObjectBoolean">
            <summary>Sets the stub of IInternalConfigHost.WriteCompleted(String streamName, Boolean success, Object writeContext, Boolean assertPermissions)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIInternalConfigRecord">
            <summary>Stub type of System.Configuration.Internal.IInternalConfigRecord</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.#ctor">
            <summary>Initializes a new instance of type StubIInternalConfigRecord</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#ConfigPath">
            <summary>Sets the stub of IInternalConfigRecord.get_ConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.ConfigPathGet">
            <summary>Sets the stub of IInternalConfigRecord.get_ConfigPath()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.GetLkgSectionString">
            <summary>Sets the stub of IInternalConfigRecord.GetLkgSection(String configKey)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.GetSectionString">
            <summary>Sets the stub of IInternalConfigRecord.GetSection(String configKey)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#HasInitErrors">
            <summary>Sets the stub of IInternalConfigRecord.get_HasInitErrors()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.HasInitErrorsGet">
            <summary>Sets the stub of IInternalConfigRecord.get_HasInitErrors()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.RefreshSectionString">
            <summary>Sets the stub of IInternalConfigRecord.RefreshSection(String configKey)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.Remove">
            <summary>Sets the stub of IInternalConfigRecord.Remove()</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#StreamName">
            <summary>Sets the stub of IInternalConfigRecord.get_StreamName()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.StreamNameGet">
            <summary>Sets the stub of IInternalConfigRecord.get_StreamName()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#GetLkgSection(System.String)">
            <summary>Sets the stub of IInternalConfigRecord.GetLkgSection(String configKey)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#GetSection(System.String)">
            <summary>Sets the stub of IInternalConfigRecord.GetSection(String configKey)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#RefreshSection(System.String)">
            <summary>Sets the stub of IInternalConfigRecord.RefreshSection(String configKey)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#Remove">
            <summary>Sets the stub of IInternalConfigRecord.Remove()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.System#Configuration#Internal#IInternalConfigRecord#ThrowIfInitErrors">
            <summary>Sets the stub of IInternalConfigRecord.ThrowIfInitErrors()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRecord.ThrowIfInitErrors">
            <summary>Sets the stub of IInternalConfigRecord.ThrowIfInitErrors()</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIInternalConfigRoot">
            <summary>Stub type of System.Configuration.Internal.IInternalConfigRoot</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.#ctor">
            <summary>Initializes a new instance of type StubIInternalConfigRoot</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.GetConfigRecordString">
            <summary>Sets the stub of IInternalConfigRoot.GetConfigRecord(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.GetSectionStringString">
            <summary>Sets the stub of IInternalConfigRoot.GetSection(String section, String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.GetUniqueConfigPathString">
            <summary>Sets the stub of IInternalConfigRoot.GetUniqueConfigPath(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.GetUniqueConfigRecordString">
            <summary>Sets the stub of IInternalConfigRoot.GetUniqueConfigRecord(String configPath)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.InitIInternalConfigHostBoolean">
            <summary>Sets the stub of IInternalConfigRoot.Init(IInternalConfigHost host, Boolean isDesignTime)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.System#Configuration#Internal#IInternalConfigRoot#IsDesignTime">
            <summary>Sets the stub of IInternalConfigRoot.get_IsDesignTime()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.IsDesignTimeGet">
            <summary>Sets the stub of IInternalConfigRoot.get_IsDesignTime()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.RemoveConfigString">
            <summary>Sets the stub of IInternalConfigRoot.RemoveConfig(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.System#Configuration#Internal#IInternalConfigRoot#GetConfigRecord(System.String)">
            <summary>Sets the stub of IInternalConfigRoot.GetConfigRecord(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.System#Configuration#Internal#IInternalConfigRoot#GetSection(System.String,System.String)">
            <summary>Sets the stub of IInternalConfigRoot.GetSection(String section, String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.System#Configuration#Internal#IInternalConfigRoot#GetUniqueConfigPath(System.String)">
            <summary>Sets the stub of IInternalConfigRoot.GetUniqueConfigPath(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.System#Configuration#Internal#IInternalConfigRoot#GetUniqueConfigRecord(System.String)">
            <summary>Sets the stub of IInternalConfigRoot.GetUniqueConfigRecord(String configPath)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.System#Configuration#Internal#IInternalConfigRoot#Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
            <summary>Sets the stub of IInternalConfigRoot.Init(IInternalConfigHost host, Boolean isDesignTime)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigRoot.System#Configuration#Internal#IInternalConfigRoot#RemoveConfig(System.String)">
            <summary>Sets the stub of IInternalConfigRoot.RemoveConfig(String configPath)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIInternalConfigSettingsFactory">
            <summary>Stub type of System.Configuration.Internal.IInternalConfigSettingsFactory</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigSettingsFactory.#ctor">
            <summary>Initializes a new instance of type StubIInternalConfigSettingsFactory</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigSettingsFactory.CompleteInit">
            <summary>Sets the stub of IInternalConfigSettingsFactory.CompleteInit()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigSettingsFactory.SetConfigurationSystemIInternalConfigSystemBoolean">
            <summary>Sets the stub of IInternalConfigSettingsFactory.SetConfigurationSystem(IInternalConfigSystem internalConfigSystem, Boolean initComplete)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigSettingsFactory.System#Configuration#Internal#IInternalConfigSettingsFactory#CompleteInit">
            <summary>Sets the stub of IInternalConfigSettingsFactory.CompleteInit()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigSettingsFactory.System#Configuration#Internal#IInternalConfigSettingsFactory#SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
            <summary>Sets the stub of IInternalConfigSettingsFactory.SetConfigurationSystem(IInternalConfigSystem internalConfigSystem, Boolean initComplete)</summary>
        </member>
        <member name="T:System.Configuration.Internal.Fakes.StubIInternalConfigSystem">
            <summary>Stub type of System.Configuration.Internal.IInternalConfigSystem</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigSystem.#ctor">
            <summary>Initializes a new instance of type StubIInternalConfigSystem</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigSystem.GetSectionString">
            <summary>Sets the stub of IInternalConfigSystem.GetSection(String configKey)</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigSystem.RefreshConfigString">
            <summary>Sets the stub of IInternalConfigSystem.RefreshConfig(String sectionName)</summary>
        </member>
        <member name="P:System.Configuration.Internal.Fakes.StubIInternalConfigSystem.System#Configuration#Internal#IInternalConfigSystem#SupportsUserConfig">
            <summary>Sets the stub of IInternalConfigSystem.get_SupportsUserConfig()</summary>
        </member>
        <member name="F:System.Configuration.Internal.Fakes.StubIInternalConfigSystem.SupportsUserConfigGet">
            <summary>Sets the stub of IInternalConfigSystem.get_SupportsUserConfig()</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigSystem.System#Configuration#Internal#IInternalConfigSystem#GetSection(System.String)">
            <summary>Sets the stub of IInternalConfigSystem.GetSection(String configKey)</summary>
        </member>
        <member name="M:System.Configuration.Internal.Fakes.StubIInternalConfigSystem.System#Configuration#Internal#IInternalConfigSystem#RefreshConfig(System.String)">
            <summary>Sets the stub of IInternalConfigSystem.RefreshConfig(String sectionName)</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.ShimProviderBase">
            <summary>Shim type of System.Configuration.Provider.ProviderBase</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderBase.#ctor(System.Configuration.Provider.ProviderBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.ShimProviderBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.AllInstances.DescriptionGet">
            <summary>Sets the shim of ProviderBase.get_Description()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.AllInstances.InitializeStringNameValueCollection">
            <summary>Sets the shim of ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.AllInstances.NameGet">
            <summary>Sets the shim of ProviderBase.get_Name()</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.Constructor">
            <summary>Sets the shim of ProviderBase.ProviderBase()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.DescriptionGet">
            <summary>Sets the shim of ProviderBase.get_Description()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.InitializeStringNameValueCollection">
            <summary>Sets the shim of ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderBase.NameGet">
            <summary>Sets the shim of ProviderBase.get_Name()</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.ShimProviderCollection">
            <summary>Shim type of System.Configuration.Provider.ProviderCollection</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderCollection.#ctor(System.Configuration.Provider.ProviderCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AddProviderBase">
            <summary>Sets the shim of ProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.AddProviderBase">
            <summary>Sets the shim of ProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.Clear">
            <summary>Sets the shim of ProviderCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.CopyToProviderBaseArrayInt32">
            <summary>Sets the shim of ProviderCollection.CopyTo(ProviderBase[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.CountGet">
            <summary>Sets the shim of ProviderCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ProviderCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of ProviderCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ProviderCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ProviderCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.SetReadOnly">
            <summary>Sets the shim of ProviderCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of ProviderCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ProviderCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.Clear">
            <summary>Sets the shim of ProviderCollection.Clear()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.Constructor">
            <summary>Sets the shim of ProviderCollection.ProviderCollection()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.CopyToProviderBaseArrayInt32">
            <summary>Sets the shim of ProviderCollection.CopyTo(ProviderBase[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.CountGet">
            <summary>Sets the shim of ProviderCollection.get_Count()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.GetEnumerator">
            <summary>Sets the shim of ProviderCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.IsSynchronizedGet">
            <summary>Sets the shim of ProviderCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.ItemGetString">
            <summary>Sets the shim of ProviderCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.RemoveString">
            <summary>Sets the shim of ProviderCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.SetReadOnly">
            <summary>Sets the shim of ProviderCollection.SetReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.SyncRootGet">
            <summary>Sets the shim of ProviderCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ProviderCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.ShimProviderException">
            <summary>Shim type of System.Configuration.Provider.ProviderException</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderException.#ctor(System.Configuration.Provider.ProviderException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.ShimProviderException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.ShimProviderException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderException.Constructor">
            <summary>Sets the shim of ProviderException.ProviderException()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ProviderException.ProviderException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderException.ConstructorString">
            <summary>Sets the shim of ProviderException.ProviderException(String message)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.ShimProviderException.ConstructorStringException">
            <summary>Sets the shim of ProviderException.ProviderException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.StubProviderBase">
            <summary>Stub type of System.Configuration.Provider.ProviderBase</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderBase.Description">
            <summary>Sets the stub of ProviderBase.get_Description()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderBase.DescriptionGet">
            <summary>Sets the stub of ProviderBase.get_Description()</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Sets the stub of ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderBase.InitializeStringNameValueCollection">
            <summary>Sets the stub of ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderBase.InitializeStub">
            <summary>Initializes a new instance of type StubProviderBase</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderBase.Name">
            <summary>Sets the stub of ProviderBase.get_Name()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderBase.NameGet">
            <summary>Sets the stub of ProviderBase.get_Name()</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.StubProviderCollection">
            <summary>Stub type of System.Configuration.Provider.ProviderCollection</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>Sets the stub of ProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderCollection.AddProviderBase">
            <summary>Sets the stub of ProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderCollection.InitializeStub">
            <summary>Initializes a new instance of type StubProviderCollection</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Configuration.Provider.Fakes.StubProviderException">
            <summary>Stub type of System.Configuration.Provider.ProviderException</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubProviderException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubProviderException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.InitializeStub">
            <summary>Initializes a new instance of type StubProviderException</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Configuration.Provider.Fakes.StubProviderException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Configuration.Provider.Fakes.StubProviderException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Configuration.Provider.Fakes.StubProviderException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
    </members>
</doc>
